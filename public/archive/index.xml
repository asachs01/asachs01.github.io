<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Archives on Staring Blankly at a Screen</title><link>https://aaron.sachs.blog/archive/</link><description>Recent content in Archives on Staring Blankly at a Screen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>Â© 2025 Aaron Sachs. All rights reserved.</copyright><lastBuildDate>Fri, 03 Jan 2020 13:28:53 +0000</lastBuildDate><atom:link href="https://aaron.sachs.blog/archive/index.xml" rel="self" type="application/rss+xml"/><item><title>Automated Monitoring Deployments with Sensu &amp; Gitlab</title><link>https://aaron.sachs.blog/archive/sensu-gitlab-monitoring-workflow/</link><pubDate>Fri, 03 Jan 2020 13:28:53 +0000</pubDate><guid>https://aaron.sachs.blog/archive/sensu-gitlab-monitoring-workflow/</guid><description>&lt;p>Work has kept me busy lately, but one thing that I&amp;rsquo;ve been working on is a Git-centric workflow for publishing Sensu resources. It&amp;rsquo;s still a work in progress, but I figured I&amp;rsquo;d share the progress so far.&lt;/p>
&lt;p>I&amp;rsquo;m currently using &lt;a class="link" href="http://gitlab.com/" target="_blank" rel="noopener"
>Gitlab&amp;rsquo;s&lt;/a> community edition in my home lab, which features the built-in CI/CD pipelines. My runners are all using their Docker executor, so all of the stages that are run are run inside containers. I won&amp;rsquo;t go into getting all of that set up and configured, but Gitlab&amp;rsquo;s docs did a great job of guiding me through everything I needed.&lt;/p>
&lt;p>There are 4 stages that I have configured. The first is to lint the yaml files that get pushed to the repo. The second stage configures Sensu and then applies the resources&amp;ndash;both this stage and the first stage only run if the branch isn&amp;rsquo;t &lt;code>master&lt;/code>. The last stage will deploy the checks to a production cluster. I&amp;rsquo;ll note here that for the purposes of Sensu&amp;rsquo;s yaml-formatted resources, I have a custom &lt;code>.yamllint&lt;/code> file so that the initial linting stage doesn&amp;rsquo;t completely fail out. It looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">extends&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">relaxed&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">ignore&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="p">|&lt;/span>&lt;span class="sd">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="sd"> .gitlab-ci.yml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">line-length&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">max&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">120&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">level&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">warning&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">indentation&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">spaces&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="m">2&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">indent-sequences&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="kc">false&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Here&amp;rsquo;s the CI config that I&amp;rsquo;m using to make all of this happen:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-yaml" data-lang="yaml">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">default&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">image&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">name&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">sensu/sensu:5.15.0&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">stages&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">lint-yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy-staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">deploy-prod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">lint yaml&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">lint-yaml&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;$CI_COMMIT_REF_NAME != &amp;#34;master&amp;#34;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">apk add --no-cache py3-setuptools&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">pip3 install --no-cache-dir yamllint&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">yamllint .&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy checks to staging&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy-staging&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;$CI_COMMIT_REF_NAME != &amp;#34;master&amp;#34;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sensu-backend start &amp;amp;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sleep 10&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sensuctl configure -n --username &amp;#34;admin&amp;#34; --password &amp;#39;P@ssw0rd!&amp;#39; --url &amp;#34;http://127.0.0.1:8080&amp;#34;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">find . -type f \( -iname &amp;#34;*.yml&amp;#34; ! -iname &amp;#34;.*&amp;#34; \) -exec sensuctl create -f {} \;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sensuctl check list&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w">&lt;/span>&lt;span class="nt">deploy checks to prod&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">stage&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">deploy-prod&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">rules&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="nt">if&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="s1">&amp;#39;$CI_COMMIT_REF_NAME == &amp;#34;master&amp;#34;&amp;#39;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">when&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w"> &lt;/span>&lt;span class="l">always&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>&lt;span class="nt">script&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sensuctl configure -n --username &amp;#34;XXXXXXXXX&amp;#34; --password &amp;#39;XXXXXXXXXXX&amp;#39; --url &amp;#34;https://sensu.example.com:8080&amp;#34; &lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">find . -type f \( -iname &amp;#34;*.yml&amp;#34; ! -iname &amp;#34;.*&amp;#34; \) -exec sensuctl create -f {} \;&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="w"> &lt;/span>- &lt;span class="l">sensuctl check list&lt;/span>&lt;span class="w">
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>There are some obvious places to improve. For example, what if I need to roll back a check? What about using a service account in Sensu to have the checks applied? What about having a CI job that opens a merge request if all of other stages pass? What about only checking the individual resource that&amp;rsquo;s been committed instead of checking all the files?&lt;/p>
&lt;p>These are all things that could be done, of course. But hey, this is just the start!&lt;/p></description></item><item><title>Badass Monitoring, Pt 2: The 'Why'</title><link>https://aaron.sachs.blog/archive/sensu-gremlin-part-2/</link><pubDate>Thu, 06 Jun 2019 10:31:40 +0000</pubDate><guid>https://aaron.sachs.blog/archive/sensu-gremlin-part-2/</guid><description>&lt;h1 id="back-it-up">Back it up
&lt;/h1>&lt;p>Oh man, did I get ahead of myself in my [last post][1]. I started chatting tools, and I realize now that I really should have been talking more about why I&amp;rsquo;m using Sensu and Gremlin. But it didn&amp;rsquo;t occur to me until this past week at [Monitorama][2].&lt;/p>
&lt;p>[John Allspaw][3] gave the keynote talk (Taking Human Performance Seriously) this year. While you can watch the talk [here][4], I&amp;rsquo;ll highlight a few points here:&lt;/p>
&lt;ul>
&lt;li>People will pursue what they think will be productive, and won&amp;rsquo;t pursue that which they feel isn&amp;rsquo;t productive&lt;/li>
&lt;li>Monitoring &amp;amp; observability are inextricably linked with other activities&lt;/li>
&lt;li>Ask and develop better questions when doing incident analysis&lt;/li>
&lt;li>Disagreements are data&lt;/li>
&lt;li>Incidents are investments that your organization accidentally made&lt;/li>
&lt;/ul>
&lt;p>There are a ton of other great points that John makes. Please, take a few minutes and give it a listen.&lt;/p>
&lt;h1 id="what-does-it-mean-basil">What does it mean, Basil?
&lt;/h1>&lt;p>Ok, so what does all of that mean and what does it have to do with chaos engineering experiments and monitoring? Everything! When you consider what happens with an incident, the last thing anyone wants is more monitoring noise, or to be surprised by the information they receive. It&amp;rsquo;s not useful.&lt;/p>
&lt;p>The tools we use when making sense of an incident should provide us with information in such a way that our reasoning about and making inferences during an incident are better because of that information. Informational cruft (i.e., contextless, repeated, action-less alerts) ultimately do damage, or at the very least, don&amp;rsquo;t contribute to making sense of an incident.&lt;/p>
&lt;p>This is why I&amp;rsquo;m using Sensu and Gremlin&amp;ndash;to refine the tool that I use for monitoring so that the information I have is of high quality and is a useful part of my information gathering and sense-making processes.&lt;/p>
&lt;h1 id="oh-the-places-well-go">Oh the places we&amp;rsquo;ll go
&lt;/h1>&lt;p>The rest of this series is going to focus on this: making Sensu a high-quality information gathering and sense-making tool for incidents. Not that it isn&amp;rsquo;t already a great tool, but just slapping a status check on a group of boxen doesn&amp;rsquo;t ð make ð for ð useful ð monitoring! There&amp;rsquo;s more to metric gathering and status checks. So we&amp;rsquo;re going to work through that. We&amp;rsquo;ll go from the most minimal thing we can do (a status check) to an alert that provide us with high-quality information for future troubleshooting. We&amp;rsquo;ll use Gremlin along the way as the means of refining those alerts.&lt;/p>
&lt;p>Cheers,&lt;/p>
&lt;p>Aaron&lt;/p>
&lt;p>&lt;em>&lt;/em>
[1]: ../sensu-gremlin-intro/
[2]: &lt;a class="link" href="https://monitorama.com/2019/pdx.html" target="_blank" rel="noopener"
>https://monitorama.com/2019/pdx.html&lt;/a>&lt;br>
[3]: &lt;a class="link" href="https://twitter.com/allspaw" target="_blank" rel="noopener"
>https://twitter.com/allspaw&lt;/a>
[4]: &lt;a class="link" href="https://youtu.be/eZJoevaojyE?t=2497" target="_blank" rel="noopener"
>https://youtu.be/eZJoevaojyE?t=2497&lt;/a>&lt;/p></description></item><item><title>Badass Monitoring, Pt 1: Sensu &amp; Gremlin</title><link>https://aaron.sachs.blog/archive/sensu-gremlin-intro/</link><pubDate>Thu, 30 May 2019 09:03:24 -0500</pubDate><guid>https://aaron.sachs.blog/archive/sensu-gremlin-intro/</guid><description>&lt;p>One of my earliest jobs was as an admin for an MSP. We&amp;rsquo;d routinely generate alerts that weren&amp;rsquo;t actionable, lacked context, and for most of our customers, were considered noise. From a monitoring perspective, it was bad. Customers didn&amp;rsquo;t trust in the alerts they received and often resorted to having some additional monitoring product installed on their systems. It&amp;rsquo;s safe to say that our auto-generated tickets and emails were largely ignored.&lt;/p>
&lt;p>In an effort to avoid repeating mistakes of the past, I want to ensure that I have actionable alerts that are context heavy. Thankfully, there are a couple of tools that I&amp;rsquo;ve found go a long way in helping me with that effort: Sensu and Gremlin. I&amp;rsquo;ll do an intro to those tools today, and we&amp;rsquo;ll pick up on how these tools work together in the next post. It&amp;rsquo;s worth mentioning that I am a Sensu employee.&lt;/p>
&lt;p>With that out of the way, let&amp;rsquo;s get to the tools!&lt;/p>
&lt;h1 id="the-tools">&lt;strong>The Tools&lt;/strong>
&lt;/h1>&lt;h2 id="sensu">&lt;strong>Sensu&lt;/strong>
&lt;/h2>&lt;p>If you&amp;rsquo;ve not used &lt;a class="link" href="https://sensu.io" target="_blank" rel="noopener"
>Sensu&lt;/a> before, allow me to make a formal introduction. At Sensu, we talk about it as a &amp;ldquo;monitoring event pipeline.&amp;rdquo; The concept is similar to a CI/CD pipeline, except that instead of releasing software software, I&amp;rsquo;m sending monitoring event data. The goal with the pipeline being that by the time I receive a monitoring event or alert, I know beyond a shadow of a doubt that what I have in front of me has been verified and provides me with exactly what I need to act on the data.&lt;/p>
&lt;p>For this series, I&amp;rsquo;ll be using Sensu as my monitoring tool of choice.&lt;/p>
&lt;h2 id="gremlin">&lt;strong>Gremlin&lt;/strong>
&lt;/h2>&lt;p>If you&amp;rsquo;re in IT, you&amp;rsquo;re probably familiar with Gremlins.&lt;/p>
&lt;p>![gremlin gif][1]&lt;/p>
&lt;p>Yes, those ones. They&amp;rsquo;ve been known to cause many an issue, but in this case, I&amp;rsquo;m talking about this [Gremlin][2] in particular. Gremlin is a [chaos engineering][3] tool that allows you to run targeted attacks on your infrastructure. This can be anything from a time-drift attack to more complicated types of attacks. The goal here will be to apply the principles of chaos engineering to uncover any weaknesses in our Sensu deployment and ensure that it is able to withstand real-world conditions.&lt;/p>
&lt;p>We&amp;rsquo;ll also use Gremlin to introduce conditions that will generate Sensu alerts. By introducing those conditions, we&amp;rsquo;ll be able to ensure that the alerts generated follow the [CASE][4] method.&lt;/p>
&lt;h1 id="the-setup">&lt;strong>The Setup&lt;/strong>
&lt;/h1>&lt;h2 id="sensu-1">&lt;strong>Sensu&lt;/strong>
&lt;/h2>&lt;p>I&amp;rsquo;ve already set up Sensu in my own environment (which is Ubuntu 18.04), so I&amp;rsquo;m not going to walk through that here. However, if you don&amp;rsquo;t have a working Sensu deployment, you&amp;rsquo;ll want to checkout the [Sensu installation doc][5], so that you can get all of the various Sensu components installed. It&amp;rsquo;s worth noting that for some our later testing, we&amp;rsquo;ll be using a clustered deployment. For that, you&amp;rsquo;ll want to take a look at the [clustering doc][6].&lt;/p>
&lt;h2 id="gremlin-1">&lt;strong>Gremlin&lt;/strong>
&lt;/h2>&lt;p>Just like Sensu, we&amp;rsquo;ll need to install Gremlin&amp;rsquo;s agent so we can start &lt;del>doing pseudo-nefarious stuff&lt;/del> performing attacks on our test boxen. ð In this case, since I&amp;rsquo;m using Ubuntu 18.04 as my test box of choice, I&amp;rsquo;ll also follow [Gremlin&amp;rsquo;s installation guide][7] for Ubuntu as well (though it&amp;rsquo;s for Ubuntu 16.04, this should still work in our case).&lt;/p>
&lt;h1 id="next-steps">Next Steps
&lt;/h1>&lt;p>Once you&amp;rsquo;ve got both Sensu and Gremlin installed, let&amp;rsquo;s run a couple of tests to make sure things are working like we expect them to.&lt;/p>
&lt;h2 id="sensu-2">Sensu
&lt;/h2>&lt;p>One of the cool things about Sensu is that you can monitor anything and you can have alerts generated from any number of things, not just the [community plugins][8] or [assets][8] Sensu offers. We can create some ad-hoc alerts using the [agent API][9] just to see what an alert might look like in our dashboard. To do that, run the following on your test VM:&lt;/p>
&lt;pre>&lt;code>curl -X POST \
-H 'Content-Type: application/json' \
-d '{
&amp;quot;check&amp;quot;: {
&amp;quot;metadata&amp;quot;: {
&amp;quot;name&amp;quot;: &amp;quot;mysql-backup-job&amp;quot;
},
&amp;quot;status&amp;quot;: 0,
&amp;quot;output&amp;quot;: &amp;quot;mysql backup initiated&amp;quot;,
&amp;quot;ttl&amp;quot;: 25200
}
}' \
http://127.0.0.1:3031/events
&lt;/code>&lt;/pre>
&lt;p>That command creates a mock event and sends it to the agent API. Now, this might be useful if I had some sort of code that monitored a mysql backup job and emitted this message. In our case, it&amp;rsquo;s just for us to make sure that we&amp;rsquo;ve set up and configured Sensu correctly. A successful test should leave you with an event that looks something like this:&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>BOOM! ð¥ Our test worked! Let&amp;rsquo;s just run a quick sample attack with Gremlin now.&lt;/p>
&lt;h2 id="gremlin-2">Gremlin
&lt;/h2>&lt;p>Just like we tested Sensu to make sure we&amp;rsquo;re able to receive events, we&amp;rsquo;re going to test our Gremlin agent. You can see me run the attack below:&lt;/p>
&lt;p>&lt;!-- raw HTML omitted -->Screen Recording 2019-06-14 at 03.25 PM.mov&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>There we have it! Both Sensu and Gremlin are working like we expect them to. In the next post, I&amp;rsquo;m going to dig a bit more into the &amp;ldquo;why&amp;rdquo; of using a chaos engineering tool like Gremlin to test monitoring tools like Sensu.&lt;/p>
&lt;p>&lt;em>&lt;/em>
[1]: &lt;a class="link" href="https://media.giphy.com/media/BqPljBK6V9ZPG/giphy.gif" target="_blank" rel="noopener"
>https://media.giphy.com/media/BqPljBK6V9ZPG/giphy.gif&lt;/a>
[2]: &lt;a class="link" href="https://www.gremlin.com/" target="_blank" rel="noopener"
>https://www.gremlin.com/&lt;/a>
[3]: &lt;a class="link" href="https://principlesofchaos.org/" target="_blank" rel="noopener"
>https://principlesofchaos.org/&lt;/a>
[4]: &lt;a class="link" href="http://onemogin.com/monitoring/case-method-better-monitoring-for-humans.html" target="_blank" rel="noopener"
>http://onemogin.com/monitoring/case-method-better-monitoring-for-humans.html&lt;/a>
[5]: &lt;a class="link" href="https://docs.sensu.io/sensu-go/5.9/installation/install-sensu/#install-the-sensu-backend" target="_blank" rel="noopener"
>https://docs.sensu.io/sensu-go/5.9/installation/install-sensu/#install-the-sensu-backend&lt;/a>
[6]: &lt;a class="link" href="https://docs.sensu.io/sensu-go/5.9/guides/clustering/" target="_blank" rel="noopener"
>https://docs.sensu.io/sensu-go/5.9/guides/clustering/&lt;/a>
[7]: &lt;a class="link" href="https://www.gremlin.com/community/tutorials/how-to-install-and-use-gremlin-on-ubuntu-16-04/" target="_blank" rel="noopener"
>https://www.gremlin.com/community/tutorials/how-to-install-and-use-gremlin-on-ubuntu-16-04/&lt;/a>&lt;/p></description></item><item><title>Compiling and Running Sensu Go on OS X</title><link>https://aaron.sachs.blog/archive/sensu-go-on-osx/</link><pubDate>Thu, 16 May 2019 19:49:32 -0500</pubDate><guid>https://aaron.sachs.blog/archive/sensu-go-on-osx/</guid><description>&lt;p>I&amp;rsquo;ve been messing around with compiling Sensu Go for several different platforms lately. In my &lt;a class="link" href="../sensu-go-on-arm/" >last post&lt;/a>, I got Sensu Go agents running on my Raspberry Pis and Nvidia Jetson Nanos. I wanted to see if I could get an agent running on OS X as well, because who doesn&amp;rsquo;t want to monitor their laptop!&lt;/p>
&lt;h1 id="the-setup">The Setup
&lt;/h1>&lt;p>Similar to what I did previously (and subsequently learned a ton more about), we&amp;rsquo;ll need to compile the Sensu Go packages since they&amp;rsquo;re not currently packaged for OS X. Let&amp;rsquo;s take a look at what we&amp;rsquo;ll need to get started:&lt;/p>
&lt;ol>
&lt;li>Install Go on your system&lt;/li>
&lt;li>Grab Sensu Go&lt;/li>
&lt;li>Build your binaries&lt;/li>
&lt;/ol>
&lt;h2 id="installing-go">Installing Go
&lt;/h2>&lt;p>If you&amp;rsquo;ve not already installed Go on your system, please see &lt;a class="link" href="https://golang.org/dl/" target="_blank" rel="noopener"
>Go&amp;rsquo;s installation documentation&lt;/a>. You can either download Go there, or install it with &lt;code>brew install golang&lt;/code>&lt;/p>
&lt;h2 id="obtaining-sensu-go">Obtaining Sensu Go
&lt;/h2>&lt;p>If you haven&amp;rsquo;t read the last post, it&amp;rsquo;s trivial to download Sensu Go into your Go workspace. Just run the following:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">go get github.com/sensu/sensu-go/...
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And head to &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>.&lt;/p>
&lt;h2 id="building-the-binaries">Building the Binaries
&lt;/h2>&lt;p>So instead of using &lt;code>build.sh&lt;/code> to create our binaries, we&amp;rsquo;re going to do something a bit different, and use what I feel to be an easier way of building our binaries.&lt;/p>
&lt;p>From inside &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>, we&amp;rsquo;re going to run this command:&lt;/p>
&lt;p>&lt;code>GOOS=darwin GOARCH=amd64 go install ./...&lt;/code>&lt;/p>
&lt;p>Once that&amp;rsquo;s finished, you should see the binaries in &lt;code>$GOPATH/bin/&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">$&lt;/span> &lt;span class="n">ls&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">check_protoc&lt;/span> &lt;span class="n">gengraphql&lt;/span> &lt;span class="n">linux_arm64&lt;/span> &lt;span class="n">make_typemap&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span> &lt;span class="n">sensuctl&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">example&lt;/span> &lt;span class="n">linux_arm&lt;/span> &lt;span class="n">loadit&lt;/span> &lt;span class="n">proto2graphql&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span> &lt;span class="n">version&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You&amp;rsquo;ll notice I have a couple of other builds there, but we&amp;rsquo;re concerned &lt;em>only&lt;/em> with the &lt;code>sensu-agent&lt;/code> binary.&lt;/p>
&lt;p>Cool! Now that it&amp;rsquo;s built, let&amp;rsquo;s move on to actually running Sensu Go on OS X.&lt;/p>
&lt;h1 id="running-sensu-go">Running Sensu Go
&lt;/h1>&lt;p>Since Sensu Go isn&amp;rsquo;t currently packaged for OS X, there&amp;rsquo;s a bit of finagling we have to do to get it to run as a service.&lt;/p>
&lt;p>Of course, you can always just start up the Sensu agent, but exiting will prevent it from running. So, we need a better approach. We&amp;rsquo;re going to follow a similar path from my last post, and do the following:&lt;/p>
&lt;ol>
&lt;li>Create the plist file for the respective services&lt;/li>
&lt;li>Create the Sensu user/group&lt;/li>
&lt;li>Create the respective directories needed for Sensu to operate&lt;/li>
&lt;li>Grab config files for Sensu Go&lt;/li>
&lt;/ol>
&lt;h2 id="creating-the-plist-file">Creating the Plist File
&lt;/h2>&lt;p>If you&amp;rsquo;ve never dived into running OS X services, plist files are property files written in XML that define how you want to run an application or service. We&amp;rsquo;ll need this in order to have the Sensu agent run whenever we log in.&lt;/p>
&lt;p>The file looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="n">xml&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1.0&amp;#34;&lt;/span> &lt;span class="n">encoding&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;UTF-8&amp;#34;&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;!&lt;/span>&lt;span class="n">DOCTYPE&lt;/span> &lt;span class="n">plist&lt;/span> &lt;span class="n">PUBLIC&lt;/span> &lt;span class="s2">&amp;#34;-//Apple//DTD PLIST 1.0//EN&amp;#34;&lt;/span> &lt;span class="s2">&amp;#34;http://www.apple.com/DTDs/PropertyList-1.0.dtd&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">plist&lt;/span> &lt;span class="n">version&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;1.0&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="ne">Label&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plist&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">UserName&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">_sensu&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">GroupName&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">_sensu&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">ProgramArguments&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">local&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">bin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">start&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">array&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">RunAtLoad&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">KeepAlive&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="bp">true&lt;/span>&lt;span class="o">/&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">StandardOutPath&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="n">StandardErrorPath&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">key&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">string&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">dict&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;/&lt;/span>&lt;span class="n">plist&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>In the interest of making things slightly easier than a copy/paste, you can run this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo curl -s -L x https://gist.githubusercontent.com/asachs01/ecf83fe92624e7f346d2c5362d825e1c/raw/ec9bec6b97fd89b671ce0ceba2a3780eca04fef6/io.sensu.sensu-agent.plist -o /Library/LaunchDaemons/io.sensu.sensu-agent.plist
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>It&amp;rsquo;s worth noting that we&amp;rsquo;re placing this in &lt;code>/Library/LaunchDaemons&lt;/code> versus &lt;code>/Library/LaunchAgents&lt;/code>. This is because we want to run the service at boot, not just login (you can read more &lt;a class="link" href="http://www.grivet-tools.com/blog/2014/launchdaemons-vs-launchagents/" target="_blank" rel="noopener"
>here&lt;/a>)&lt;/p>
&lt;p>Alright, now it&amp;rsquo;s time to create the Sensu user and group.&lt;/p>
&lt;h2 id="create-the-sensu-usergroup">Create the Sensu User/Group
&lt;/h2>&lt;p>This isn&amp;rsquo;t nearly as straighforward as I&amp;rsquo;d hoped. If you recall, for Linux systems, this is as easy as a &lt;code>useradd&lt;/code>. In OS X, however, we use the command &lt;code>dscl&lt;/code>, which takes a few different arguments.&lt;/p>
&lt;p>In Sensu Core, the OS X package had a script to run this as part of its postinstall process. After doing some digging and dissecting of that package, it turns out that there&amp;rsquo;s a handy little function in the script that will do the trick. It looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">&lt;span class="cp">#!/bin/sh
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="cp">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create_sensu_user_group&lt;span class="o">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># create sensu group&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> +e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -list /Groups &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;^_sensu&amp;#34;&lt;/span> &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">RC&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">last_used_gid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>dscacheutil -q group &lt;span class="p">|&lt;/span> grep gid &lt;span class="p">|&lt;/span> tail -n &lt;span class="m">1&lt;/span> &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;{ print $2 }&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">sensu_gid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>&lt;span class="nb">echo&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="nv">$last_used_gid&lt;/span>&lt;span class="s2"> + 1&amp;#34;&lt;/span> &lt;span class="p">|&lt;/span> bc&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -create Groups/_sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -create Groups/_sensu PrimaryGroupID &lt;span class="nv">$sensu_gid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># create sensu user&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> +e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -list /Users &lt;span class="p">|&lt;/span> grep &lt;span class="s2">&amp;#34;^_sensu&amp;#34;&lt;/span> &amp;gt; /dev/null
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">RC&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="nv">$?&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nb">set&lt;/span> -e
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="o">[&lt;/span> &lt;span class="s2">&amp;#34;&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nv">RC&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="s2">&amp;#34;&lt;/span> !&lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;0&amp;#34;&lt;/span> &lt;span class="o">]&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="k">then&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nv">sensu_gid&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="sb">`&lt;/span>dscl . -read /Groups/_sensu &lt;span class="p">|&lt;/span> awk &lt;span class="s1">&amp;#39;($1 == &amp;#34;PrimaryGroupID:&amp;#34;) { print $2 }&amp;#39;&lt;/span>&lt;span class="sb">`&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -create /Users/_sensu UniqueID &lt;span class="nv">$sensu_gid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -create /Users/_sensu PrimaryGroupID &lt;span class="nv">$sensu_gid&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> dscl . -create /Users/_sensu UserShell /usr/bin/false
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">fi&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">create_sensu_user_group
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>You can pull this down by running:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -LO https://gist.githubusercontent.com/asachs01/ecf83fe92624e7f346d2c5362d825e1c/raw/ec9bec6b97fd89b671ce0ceba2a3780eca04fef6/create_sensu_user_group.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And then:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">chmod +x create_sensu_user_group.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And run it:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">./create_sensu_user_group.sh
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Which will give us our user and group. Now, on to the directories.&lt;/p>
&lt;h2 id="create-sensu-directories">Create Sensu Directories
&lt;/h2>&lt;p>In this part of the exercise, we&amp;rsquo;re going to diverge slightly from how we did things on the Pis and Nanos. We&amp;rsquo;re going to just run:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo mkdir -p /etc/sensu/cache/sensu-agent
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>The reason for this is due to my own inability to figure out why I couldn&amp;rsquo;t have Sensu create and manage the &lt;code>/var/cache/sensu&lt;/code> directory like I&amp;rsquo;d expected. After several hours of pounding away at what I thought would be simple permissions issue, I decided that I&amp;rsquo;d just run the command above and change my cache directory in the config.&lt;/p>
&lt;p>So from here, we need to run:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo chown -R _sensu:_sensu /etc/sensu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>This should get us where we need to go in terms of files and permissions.&lt;/p>
&lt;h2 id="obtaining-sensu-go-config-files">Obtaining Sensu Go Config Files
&lt;/h2>&lt;p>Like the last post, this stays the same.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -LO http://docs.sensu.io/sensu-go/latest/files/agent.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp agent.yml /etc/sensu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;h2 id="starting-sensu-go">Starting Sensu Go
&lt;/h2>&lt;p>Alright, now we&amp;rsquo;re pretty much set and just need to start up the Sensu agent:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">launchctl&lt;/span> &lt;span class="nb">load&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">w&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">Library&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">LaunchDaemons&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">io&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">plist&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, let&amp;rsquo;s check to make sure the agent is running:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo ps -ef | grep -v grep |grep &amp;#34;sensu-agent&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> 400 12927 1 0 11:51AM ?? 0:04.14 /usr/local/bin/sensu-agent start
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And we can do a couple of other things to verify that the agent is doing what we expect:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">tail&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">f&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="nb">log&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">log&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Which should give us logs that show we&amp;rsquo;re doing things and then also check to see that the agent shows up in the dashboard:&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/sensu_osx.png"
loading="lazy"
alt="screenshot of sensu on osx"
>&lt;/p>
&lt;p>Boom! There you have it!&lt;/p>
&lt;p>Cheers,&lt;/p>
&lt;p>Aaron&lt;/p></description></item><item><title>Compiling and Running Sensu Go on ARM</title><link>https://aaron.sachs.blog/archive/sensu-go-on-arm/</link><pubDate>Thu, 09 May 2019 19:49:32 -0500</pubDate><guid>https://aaron.sachs.blog/archive/sensu-go-on-arm/</guid><description>&lt;h1 id="updates">UPDATES
&lt;/h1>&lt;p>When I originally wrote this post, I was operating under some outdated assumptions when it comes to building Sensu on arm devices. I&amp;rsquo;ll post the updates here at the beginning of the article, and you can read on to see how I&amp;rsquo;d previously set up Sensu on my Nvidia Jetson Nanos.&lt;/p>
&lt;h2 id="compiling-sensu-go">Compiling Sensu Go
&lt;/h2>&lt;p>As a Go novice, I didn&amp;rsquo;t fully understand the workflow for compiling Sensu for arm devices. As it so happens, it&amp;rsquo;s fairly easy to cross-compile from whatever device you&amp;rsquo;re on and then just transfer the binaries to the system you want to run on. I found this out the hard way by trying to compile on the Raspberry Pi&amp;rsquo;s I have. This resulted in them locking up.&lt;/p>
&lt;p>So let&amp;rsquo;s walk through the non-build-script way of doing this:&lt;/p>
&lt;ol>
&lt;li>Install Go&lt;/li>
&lt;li>&lt;a class="link" href="#obtaining-sensu-go" >Obtain Sensu Go&lt;/a>&lt;/li>
&lt;li>Build the binary for your arm system of choice using &lt;code>GOOS=linux GOARCH=arm go install ./...&lt;/code> from inside the project root (&lt;code>$GOPATH/src/github/sensu/sensu-go&lt;/code>)&lt;/li>
&lt;li>Transfer to the binary/binaries to your Pi&amp;rsquo;s, Nano&amp;rsquo;s, or other arm board&lt;/li>
&lt;li>Proceed through the &lt;a class="link" href="#running-sensu-go" >rest of the setup&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Now, you can absolutely run through the original post as it was and &lt;em>still&lt;/em> run Sensu. However, I find that cross compiling from a system with a bit more oomph is going to make things easier.&lt;/p>
&lt;h1 id="original-post">Original post
&lt;/h1>&lt;p>In this post, I&amp;rsquo;ll cover how I am running Sensu Go on several NVIDIA Jetson Nanos. Though this is being done on a Nano, you could use the same approach I use here on a Raspberry Pi, or any other armv7 board. I would note that this is a temporary until official Sensu Go arm packages are released.&lt;/p>
&lt;h1 id="the-setup">The Setup
&lt;/h1>&lt;p>There are several things you&amp;rsquo;ll need to do before you can start playing around with Sensu Go.&lt;/p>
&lt;ol>
&lt;li>Install Go on your system&lt;/li>
&lt;li>Grab Sensu Go&lt;/li>
&lt;li>Build the binaries&lt;/li>
&lt;/ol>
&lt;h2 id="installing-go">Installing Go
&lt;/h2>&lt;p>While installing Go on the Jetson as fairly trivial, the goal here is to give you a complete accounting of how I did what I did.&lt;/p>
&lt;p>To install Go, run:&lt;/p>
&lt;p>&lt;code>sudo apt-get install golang&lt;/code>&lt;/p>
&lt;p>You should then have it installed on your system. If you need more complete documentation on installing Go, please see &lt;a class="link" href="https://golang.org/dl/" target="_blank" rel="noopener"
>Go&amp;rsquo;s docs on downloading and installing Go onto your system&lt;/a>.&lt;/p>
&lt;h2 id="obtaining-sensu-go">Obtaining Sensu Go
&lt;/h2>&lt;p>Once you&amp;rsquo;ve installed Go, the next step is to obtain Sensu Go. To get the package, run the following:&lt;/p>
&lt;p>&lt;code>go get github.com/sensu/sensu-go/...&lt;/code>&lt;/p>
&lt;p>This will put the package at &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>.&lt;/p>
&lt;h2 id="building-the-binaries">Building the Binaries
&lt;/h2>&lt;p>Next up, we&amp;rsquo;re going to build the binaries using a script provided in the repo. You&amp;rsquo;ll want to ensure that you&amp;rsquo;re in &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>. Once you&amp;rsquo;re there, you&amp;rsquo;ll find a script called &lt;code>build.sh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">â¯â¯â¯â¯ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">agent dashboard rpc vendor Dockerfile.rhel_atomic build.ps1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">api docker-scripts scripts version Dockerfile.testagent build.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">asset examples system CHANGELOG.md FAQ.md docker-compose.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">backend graphql testing CONTRIBUTING.md Gopkg.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cli handler transport DCO Gopkg.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmd js types Dockerfile LICENSE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">command licenses util Dockerfile.rhel README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We&amp;rsquo;ll run that and build our binaries:&lt;/p>
&lt;p>&lt;code>./build.sh&lt;/code>&lt;/p>
&lt;p>Now, we&amp;rsquo;ll grab that binaries that were built:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd $GOPATH/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp sensu-{agent,backend} /usr/sbin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s it for the prep work. Now it&amp;rsquo;s on to actually running Sensu Go.&lt;/p>
&lt;h1 id="running-sensu-go">Running Sensu Go
&lt;/h1>&lt;p>To run Sensu Go, we&amp;rsquo;ll need to go through the following steps:&lt;/p>
&lt;ol>
&lt;li>Create the service files for the respective services&lt;/li>
&lt;li>Create the Sensu user/group&lt;/li>
&lt;li>Create the respective directories needed for Sensu to operate&lt;/li>
&lt;li>Grab config files for Sensu Go&lt;/li>
&lt;/ol>
&lt;h2 id="creating-the-service-files">Creating the Service Files
&lt;/h2>&lt;p>There are two service files that will need to be created in order to use systemd to manage Sensu Go as you&amp;rsquo;d find with RHEL/Debian packages:&lt;/p>
&lt;p>&lt;strong>Sensu Backend Service File&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Unit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">The&lt;/span> &lt;span class="n">Sensu&lt;/span> &lt;span class="n">Backend&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Service&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load env vars from /etc/default/ and /etc/sysconfig/ if they exist.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Prefixing the path with &amp;#39;-&amp;#39; makes it try to load, but if the file doesn&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exist, it continues onward.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sysconfig&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LimitNOFILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecStart&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sbin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">backend&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WorkingDirectory&lt;/span>&lt;span class="o">=/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Install&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">multi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To make this a bit easier, you can do the following:&lt;/p>
&lt;p>&lt;code>sudo curl -L https://gist.githubusercontent.com/asachs01/497ede01e9905e7917d577451ac51c1b/raw/141aa960a5481e4c536ff790561c5effd0f3b058/sensu-backend.service -o /lib/systemd/system/sensu-backend.service&lt;/code>&lt;/p>
&lt;p>&lt;strong>Sensu Agent Service File&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Unit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">The&lt;/span> &lt;span class="n">Sensu&lt;/span> &lt;span class="n">Agent&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Service&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load env vars from /etc/default/ and /etc/sysconfig/ if they exist.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Prefixing the path with &amp;#39;-&amp;#39; makes it try to load, but if the file doesn&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exist, it continues onward.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sysconfig&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LimitNOFILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecStart&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sbin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span> &lt;span class="n">start&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WorkingDirectory&lt;/span>&lt;span class="o">=/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Install&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">multi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And the same with this one:&lt;/p>
&lt;p>&lt;code>sudo curl -L https://gist.githubusercontent.com/asachs01/497ede01e9905e7917d577451ac51c1b/raw/141aa960a5481e4c536ff790561c5effd0f3b058/sensu-agent.service -o /lib/systemd/system/sensu-agent.service&lt;/code>&lt;/p>
&lt;p>Again, these will need to live at &lt;code>/lib/systemd/system/sensu-backend.service&lt;/code> and &lt;code>/lib/systemd/system/sensu-agent.service&lt;/code> respectively. Once you&amp;rsquo;ve got those in place, let&amp;rsquo;s move onto the next step.&lt;/p>
&lt;h2 id="create-the-sensu-usergroup">Create the Sensu User/Group
&lt;/h2>&lt;p>This is fairly simple, as we&amp;rsquo;ll only need to create a service account for Sensu:&lt;/p>
&lt;p>&lt;code>sudo useradd -r sensu&lt;/code>&lt;/p>
&lt;p>Now, onto the next step of creating the requisite directories for Sensu.&lt;/p>
&lt;h2 id="create-sensu-directories">Create Sensu Directories
&lt;/h2>&lt;p>There are three directories that need to be created and owned by the Sensu user:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/var/lib/sensu&lt;/code>&lt;/li>
&lt;li>&lt;code>/var/cache/sensu&lt;/code>&lt;/li>
&lt;li>&lt;code>/etc/sensu&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Create each of these and change the ownership on them:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">mkdir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alright, now for the last step: obtaining the config files.&lt;/p>
&lt;h2 id="obtaining-sensu-go-config-files">Obtaining Sensu Go Config Files
&lt;/h2>&lt;p>This is also a fairly quick step:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -LO http://docs.sensu.io/sensu-go/latest/files/\{agent,backend\}.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp {agent,backend}.yml /etc/sensu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, let&amp;rsquo;s get cooking.&lt;/p>
&lt;h2 id="start-sensu-go">Start Sensu Go
&lt;/h2>&lt;p>This is it. The moment you&amp;rsquo;ve been waiting for. It&amp;rsquo;s time to run Sensu!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo systemctl enable sensu-{agent,backend}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start sensu-{agent,backend}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To ensure that Sensu is running as we expect, do a quick &lt;code>sudo journalctl -fu sensu-backend&lt;/code>. Journald should be free of any errors and if you go to http://IPOFYOURSYSTEM:3000, you should get a nice dashboard that looks like:&lt;/p>
&lt;p>&lt;img src="https://p299.p4.n0.cdn.getcloudapp.com/items/OAuL7wme/Image&amp;#43;2020-01-17&amp;#43;at&amp;#43;12.25.47&amp;#43;PM.png?v=c53eadf0f22ed4865e2e5971c164b759"
loading="lazy"
alt="sensu go dashboard"
>&lt;/p>
&lt;p>There you have it! If you want to cluster a few Jetson Nanos, or Raspberry Pis up, head over to &lt;a class="link" href="https://docs.sensu.io/sensu-go/5.7/guides/clustering/" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s clustering guide&lt;/a>.&lt;/p>
&lt;p>Cheers!&lt;/p></description></item><item><title>A minimal Sensu environment with Docker</title><link>https://aaron.sachs.blog/archive/minimal-sensu-docker/</link><pubDate>Mon, 06 May 2019 11:32:56 -0500</pubDate><guid>https://aaron.sachs.blog/archive/minimal-sensu-docker/</guid><description>&lt;p>This past week, I had the pleaseure of attending Dockercon. While I was there primarily working the &lt;a class="link" href="https://sensu.io" target="_blank" rel="noopener"
>Sensu&lt;/a> booth, it occurred to me that Docker presents an ideal way to demo what Sensu does, and I can quickly get an environment up without having to go through the rigmarole that I previously did using &lt;a class="link" href="https://vagrantup.com" target="_blank" rel="noopener"
>Vagrant&lt;/a>. Now, that&amp;rsquo;s not saying that I think one tool is better than the other, but for the purposes of quick demos, Docker is more useful to me.&lt;/p>
&lt;p>So let&amp;rsquo;s go over the setup.&lt;/p>
&lt;h2 id="docker-details">Docker details
&lt;/h2>&lt;p>I&amp;rsquo;m primarily using &lt;a class="link" href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener"
>Docker for Mac&lt;/a> right now, since I&amp;rsquo;ve switched over from my Linux laptop. But now that I&amp;rsquo;ve covered that, let&amp;rsquo;s take a look at this &lt;a class="link" href="https://github.com/asachs01/sensu-go-minimal" target="_blank" rel="noopener"
>little repo&lt;/a> I&amp;rsquo;m using.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âââ README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âââ assets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ hello-world-ruby.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ helloworld-v0.1.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ sensu-plugins-cpu-checks_4.0.0_alpine_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ sensu-ruby-runtime_0.0.5_alpine_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âââ config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âÂ Â  âââ nginx.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ assets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âÂ Â  âââ sensu-plugins-cpu-checks.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âÂ Â  âââ sensu-ruby-runtime.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ checks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ check-cpu.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âÂ Â  âââ check-disk-usage.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">âââ docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And a look at the docker-compose file:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">version&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">services&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu/sensu:latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ports&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;2379:2379&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;2380:2380&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;8080:8080&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;8081:8081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">command&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend start&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">volumes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;/tmp/sensu:/var/lib/sensu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu/sensu:latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">command&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu-agent start --backend-url ws://sensu-backend:8081 --subscriptions dev poller system linux docker --cache-dir /var/lib/sensu --namespace default --deregister true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">links&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend:backend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">depends_on&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">asset&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">latest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ports&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">80&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">volumes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;./config/nginx/nginx.conf:/etc/nginx/nginx.conf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;./assets:/usr/share/nginx/html/assets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">depends_on&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">links&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend:backend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>What we end up with here is a backend, an agent, and a local asset server (SUPER useful if you&amp;rsquo;re on ð© wifi/internet). This means that I can quickly spin up an agent and a backend, and then drop any &lt;a class="link" href="https://docs.sensu.io/sensu-go/latest/reference/assets/" target="_blank" rel="noopener"
>asset&lt;/a> that I need to use in the assets directory and have the agent download it quickly.&lt;/p>
&lt;p>This makes demos super quick to spin up, and I can scale a bunch of agents if I want to show a large number of agent containers connecting to the backend.&lt;/p>
&lt;p>Cheers!&lt;/p></description></item><item><title>Why I started using a Kanban tool for home tasks</title><link>https://aaron.sachs.blog/archive/my-personal-kanban/</link><pubDate>Sun, 10 Feb 2019 20:25:03 -0500</pubDate><guid>https://aaron.sachs.blog/archive/my-personal-kanban/</guid><description>&lt;p>I&amp;rsquo;ve tried quite a few to-do apps. Google Tasks, Todoist, Wunderlist, Any.do, &lt;!-- raw HTML omitted -->. I&amp;rsquo;ve even tried using things like a planner, or a Bullet Journal. No app, no physical piece of paper seems to do the trick when it comes to keeping track of things I need to do.&lt;/p>
&lt;p>That is, until I started using a tool that could emulate a Kanban-style workflow. Let&amp;rsquo;s start with &amp;ldquo;What the heck is a Kanban board?&amp;rdquo;&lt;/p>
&lt;h2 id="what-is-kanban">What is Kanban
&lt;/h2>&lt;p>Kanban boards are basically to-do lists on steroids. They find their origins in the world of &lt;a class="link" href="https://www.leanproduction.com/" target="_blank" rel="noopener"
>Lean Manufacturing&lt;/a>. A general flow looks something like this:&lt;/p>
&lt;p>To-do &amp;ndash;&amp;gt; Doing &amp;ndash;&amp;gt; Done&lt;/p>
&lt;p>Where you&amp;rsquo;d have 3 columns with items under the column that represents that item&amp;rsquo;s current status. Keep in mind a Kanban board can be customized to whatever you require, so these columns aren&amp;rsquo;t static. &lt;a class="link" href="https://www.atlassian.com/agile/kanban/boards" target="_blank" rel="noopener"
>There is a ton more that goes into a Kanban board&lt;/a>, but for a personal one, I&amp;rsquo;ve found that keeping it simple helps me best.&lt;/p>
&lt;h2 id="why-would-i-want-to-use-it">Why would I want to use it?
&lt;/h2>&lt;p>So why use a Kanban board over a traditional to-do list, or app? For me, it&amp;rsquo;s easy: I can see the progress of what I&amp;rsquo;m doing. At a glance, I can get some insight into what things are in my personal backlog and in what phase they&amp;rsquo;re in. It also happens that putting something on the board makes it stick for me.&lt;/p>
&lt;p>Using boards has stuck so well that I&amp;rsquo;ve started creating domain specific boards. I have one for home improvement projects, one for general errands and such, one for shopping lists, and a personal one for tasks that aren&amp;rsquo;t a home improvement project or an errand/household task.&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/haus-projects.png"
loading="lazy"
alt="house projects"
>&lt;/p>
&lt;h2 id="what-tools-can-i-use-for-my-own-personal-kanban">What tools can I use for my own personal Kanban?
&lt;/h2>&lt;p>There are quite a number of tools you can use to do a personal Kanban board. Let&amp;rsquo;s look at a few:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://trello.com/" target="_blank" rel="noopener"
>Trello&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://asana.com" target="_blank" rel="noopener"
>Asana&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://notion.so" target="_blank" rel="noopener"
>Notion&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://waffle.io" target="_blank" rel="noopener"
>Waffle&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://waffle.io" target="_blank" rel="noopener"
>Personal Kanban&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://personalkanban.com/pk/" target="_blank" rel="noopener"
>Kanban Tool&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.pipefy.com/" target="_blank" rel="noopener"
>Pipefy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I personally like using Notion for my boards. As a one-stop-shop type of software, it allows me to link to lists and documents that I&amp;rsquo;ve created inside of the app so I don&amp;rsquo;t have to ever worry about going back and forth between tabs or apps.&lt;/p>
&lt;p>I&amp;rsquo;ve also used Trello and Asana in the past, both at home and work. While they both work well as personal Kanban tools, I still tend to prefer Notion.&lt;/p>
&lt;p>If you&amp;rsquo;re more of the type that wants to use a Github-centric approach, Waffle is the tool for you.&lt;/p>
&lt;p>I&amp;rsquo;ve not yet used Personal Kanban, Kanban Tool, or Pipefy, so I can&amp;rsquo;t speak to those tools. However, what I&amp;rsquo;d recommend is giving each of these a shot to see if they&amp;rsquo;re right for you, or if they stick. If they do, awesome! If they don&amp;rsquo;t stick immediately, no worries. The more you use the tools, the more things will settle in and make sense as you develop your workflow.&lt;/p></description></item><item><title>Resetting Minikube's IP</title><link>https://aaron.sachs.blog/archive/resetting-minikubes-ip-address/</link><pubDate>Mon, 04 Feb 2019 10:55:09 +0000</pubDate><guid>https://aaron.sachs.blog/archive/resetting-minikubes-ip-address/</guid><description>&lt;h2 id="updated">UPDATED
&lt;/h2>&lt;p>I found that there is an exception to what the solution is here, namely that this only applies to &lt;em>VirtualBox 5.2&lt;/em>. If you end up using Virtualbox 6.0, note that this won&amp;rsquo;t work. the longer term fix would be to downgrade your VirtualBox version.&lt;/p>
&lt;h2 id="original-post">ORIGINAL POST
&lt;/h2>&lt;p>I use &lt;a class="link" href="https://github.com/kubernetes/minikube" target="_blank" rel="noopener"
>minikube&lt;/a> for a lot of quick troubleshooting and demos. I recently found myself in a situation where the IP address kept incrementing. Instead of the standard &lt;code>192.168.99.100&lt;/code>, every restart found the minikube VM with a new IP address, which made demos that relied on the standard IP difficult to demo.&lt;/p>
&lt;p>I ended up finding the solution on &lt;a class="link" href="https://stackoverflow.com/questions/53871053/how-to-completely-purge-minikube-config-or-reset-ip-back-to-192-168-99-100#comment94730403_53883894" target="_blank" rel="noopener"
>Stackoverflow&lt;/a>. To reset minikube&amp;rsquo;s IP back to normal, do the following:&lt;/p>
&lt;ol>
&lt;li>&lt;code>minikube stop&lt;/code>&lt;/li>
&lt;li>Open Virtualbox and go to &amp;ldquo;File&amp;rdquo;&amp;ndash;&amp;gt;Host Network Manager&lt;/li>
&lt;li>Find the adapter that has the &lt;code>192.168.99.1&lt;/code> subnet assigned to it (likely &lt;code>vbox0&lt;/code>, though mine was &lt;code>vbox2&lt;/code>), and remove it.&lt;/li>
&lt;li>&lt;code>minkube start&lt;/code>&lt;/li>
&lt;li>&lt;code>minikube ip&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>That should give you the good ole &lt;code>192.168.99.100&lt;/code> IP address that you know and love.&lt;/p></description></item><item><title>Monitoring My Kegerator With Sensu</title><link>https://aaron.sachs.blog/archive/monitoring-my-kegerator-with-sensu/</link><pubDate>Sat, 28 Apr 2018 04:58:16 +0000</pubDate><guid>https://aaron.sachs.blog/archive/monitoring-my-kegerator-with-sensu/</guid><description>&lt;p>It&amp;rsquo;s been a long time coming, but I&amp;rsquo;ve finally got the &lt;a class="link" href="https://github.com/asachs01/kegpi" target="_blank" rel="noopener"
>KegPi&lt;/a> &lt;em>mostly&lt;/em> working and being monitored with &lt;a class="link" href="https://sensu.io" target="_blank" rel="noopener"
>Sensu&lt;/a>! This post is going to go over the whole kit and caboodle and is going to build on the posts of &lt;a class="link" href="moving-to-kegging" >creating the kegerator&lt;/a> and &lt;a class="link" href="monitoring-raspberry-pis-with-sensu" >getting Sensu to run on a Raspberry Pi&lt;/a>. The deep and dark part of this post will cover:&lt;/p>
&lt;ul>
&lt;li>The code to measure the temp/contact sensors (Sensu Plugin)&lt;/li>
&lt;li>Writing Sensu checks that will incorporate that code&lt;/li>
&lt;li>Exporting the data from the temp sensor to &lt;a class="link" href="https://graphiteapp.org/" target="_blank" rel="noopener"
>Graphite&lt;/a> and &lt;a class="link" href="https://www.influxdata.com/" target="_blank" rel="noopener"
>InfluxDB&lt;/a> for seeing temperature trends&lt;/li>
&lt;/ul>
&lt;h1 id="writing-the-plugins">Writing the Plugins
&lt;/h1>&lt;p>If you haven&amp;rsquo;t had a chance to read the previous post on using Sensu to monitor Raspberry Pis, I&amp;rsquo;ll give you a short blurb about Sensu. It&amp;rsquo;s an open-source monitoring framework that allows you to monitor everything from fleets of servers and networking equipment to applications, and even yes, Raspberry Pis. It also has a highly decoupled architecture and relies on &lt;a class="link" href="https://github.com/sensu-plugins" target="_blank" rel="noopener"
>plugins&lt;/a> to extend its functionality.&lt;/p>
&lt;p>Currently there aren&amp;rsquo;t any plugins inside of the Sensu ecosystem that exist for monitoring components that would be hooked up to a Raspberry Pi. So, I decided to write a few!&lt;/p>
&lt;p>&lt;em>WARNING: I don&amp;rsquo;t write a whole lot of Ruby professionally, and it&amp;rsquo;s likely pretty UGLY code, but what the hell. It works, so let&amp;rsquo;s just go with it! Also, your mileage may vary if you decide to put something like this together and use my code.&lt;/em>&lt;/p>
&lt;p>To get started writing a plugin, Sensu provides some skeletons for writing code in various languages:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://github.com/sensu-plugins/sensu-plugin" target="_blank" rel="noopener"
>Ruby&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/sensu-plugins/sensu-plugin-python" target="_blank" rel="noopener"
>Python&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/sensu-plugins/sensu-plugins-windows/tree/master/bin/powershell" target="_blank" rel="noopener"
>Powershell* (not Sensu-provided, but does give a good idea of plugins written in Powershell)&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>Before I&amp;rsquo;d started working at Sensu, the KegPi project was something that I tried to do from the ground up. I realized that the monitoring portion wasn&amp;rsquo;t something that I wanted to write from scratch and tools (like Sensu) already existed, hence why I wrote the plugin for it.&lt;/p>
&lt;p>One quick note&amp;ndash;by design, this plugin and the checks are designed to be fairly generic. What that means practically is that even though I&amp;rsquo;m using this primarily for a Raspberry Pi hooked up to a kegerator, you can use these checks in any sort of context. Have a Raspi that&amp;rsquo;s monitoring the temp of a chicken coop? You can use this plugin. Want to &lt;a class="link" href="http://blog.initialstate.com/pi-for-kids-door-sensor/" target="_blank" rel="noopener"
>build security system for your kid&amp;rsquo;s school locker&lt;/a> and use Sensu to handle the alerts? You can use this plugin to do it!&lt;/p>
&lt;p>So let&amp;rsquo;s take a look at a couple of the checks that are part of the plugin.&lt;/p>
&lt;h2 id="status-checks">Status Checks
&lt;/h2>&lt;h3 id="contact-sensor-check">Contact Sensor Check
&lt;/h3>&lt;p>The contact sensor check is, again, designed to be generic and able to be used in a variety of circumstances. Here&amp;rsquo;s the code:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">require &amp;#39;sensu-plugin/check/cli&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">require &amp;#39;rpi_gpio&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"># Starting check class
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">class CheckContactSensor &amp;lt; Sensu::Plugin::Check::CLI
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> option :pinnum,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> short: &amp;#39;-p PINNUM&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> long: &amp;#39;--pin-num PINNUM&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> description: &amp;#39;Sets the pin number the contact sensor is attached to&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> proc: proc(&amp;amp;:to_i),
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> required: true
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> option :boardnum,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> short: &amp;#39;-b BOARDNUM&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> long: &amp;#39;--board-num BOARDNUM&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> description: &amp;#39;Sets the board numbering type to either :bcm or :board&amp;#39;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> default: :bcm
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def initialize
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> super
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RPi::GPIO.set_numbering config[:boardnum]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> RPi::GPIO.setup config[:pinnum], as: &amp;#39;input&amp;#39;, pull: &amp;#39;up&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> def run
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> if RPi::GPIO.high? config[:pinnum]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> puts &amp;#39;Contact sensor is open!&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(2)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> else
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> puts &amp;#39;Contact sensor is closed.&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> exit(0)
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> end
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">end
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We&amp;rsquo;ve got an option to set our pin and our board numbering options (those coming from &lt;a class="link" href="https://github.com/ClockVapor/rpi_gpio" target="_blank" rel="noopener"
>Clockvapor&amp;rsquo;s ruby port of rpi.gpio&lt;/a>). So when we write our check (see below), we can add these options to the check.&lt;/p>
&lt;h3 id="temp-sensor-check">Temp Sensor Check
&lt;/h3>&lt;p>Working with the temp in Python examples was a bit of a challenge and much of that code I was able to translate into Ruby for the purpose of this particular check. Let&amp;rsquo;s take a look:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;span class="lnt">38
&lt;/span>&lt;span class="lnt">39
&lt;/span>&lt;span class="lnt">40
&lt;/span>&lt;span class="lnt">41
&lt;/span>&lt;span class="lnt">42
&lt;/span>&lt;span class="lnt">43
&lt;/span>&lt;span class="lnt">44
&lt;/span>&lt;span class="lnt">45
&lt;/span>&lt;span class="lnt">46
&lt;/span>&lt;span class="lnt">47
&lt;/span>&lt;span class="lnt">48
&lt;/span>&lt;span class="lnt">49
&lt;/span>&lt;span class="lnt">50
&lt;/span>&lt;span class="lnt">51
&lt;/span>&lt;span class="lnt">52
&lt;/span>&lt;span class="lnt">53
&lt;/span>&lt;span class="lnt">54
&lt;/span>&lt;span class="lnt">55
&lt;/span>&lt;span class="lnt">56
&lt;/span>&lt;span class="lnt">57
&lt;/span>&lt;span class="lnt">58
&lt;/span>&lt;span class="lnt">59
&lt;/span>&lt;span class="lnt">60
&lt;/span>&lt;span class="lnt">61
&lt;/span>&lt;span class="lnt">62
&lt;/span>&lt;span class="lnt">63
&lt;/span>&lt;span class="lnt">64
&lt;/span>&lt;span class="lnt">65
&lt;/span>&lt;span class="lnt">66
&lt;/span>&lt;span class="lnt">67
&lt;/span>&lt;span class="lnt">68
&lt;/span>&lt;span class="lnt">69
&lt;/span>&lt;span class="lnt">70
&lt;/span>&lt;span class="lnt">71
&lt;/span>&lt;span class="lnt">72
&lt;/span>&lt;span class="lnt">73
&lt;/span>&lt;span class="lnt">74
&lt;/span>&lt;span class="lnt">75
&lt;/span>&lt;span class="lnt">76
&lt;/span>&lt;span class="lnt">77
&lt;/span>&lt;span class="lnt">78
&lt;/span>&lt;span class="lnt">79
&lt;/span>&lt;span class="lnt">80
&lt;/span>&lt;span class="lnt">81
&lt;/span>&lt;span class="lnt">82
&lt;/span>&lt;span class="lnt">83
&lt;/span>&lt;span class="lnt">84
&lt;/span>&lt;span class="lnt">85
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">require&lt;/span> &lt;span class="s1">&amp;#39;sensu-plugin/check/cli&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">require&lt;/span> &lt;span class="s1">&amp;#39;rpi_gpio&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Starting check class&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="k">class&lt;/span> &lt;span class="n">CheckTempSensor&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="n">Sensu&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">Plugin&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">Check&lt;/span>&lt;span class="p">::&lt;/span>&lt;span class="n">CLI&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">option&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">fahrenheit&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">short&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;-F&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;--fahrenheit&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Return temperature in Fahrenheit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">option&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">celsius&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">short&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;-C&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;--celsius&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Return temperature in Celsius&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">option&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">tcrit&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">short&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;-c TEMP&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;--critical&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">proc&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">proc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">to_i&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Critical if TEMP greater than set value&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">option&lt;/span> &lt;span class="p">:&lt;/span>&lt;span class="n">twarn&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">short&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;-w TEMP&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">long&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;--warn&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">proc&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">proc&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="o">&amp;amp;&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">to_i&lt;/span>&lt;span class="p">),&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">description&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;Warning if TEMP greater than set value&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Set up variables&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">super&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;modprobe w1-gpio&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;modprobe w1-therm&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">basedir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/sys/bus/w1/devices/&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">device_folder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Dir&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">glob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">basedir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;28*&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">device_folder&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/w1_slave&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">read_temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">4.&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;YES&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sleep&lt;/span> &lt;span class="mf">0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">equals_pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;t=&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">equals_pos&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">equals_pos&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">2.&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_f&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">temp_to_fahrenheit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">read_temp&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">9.0&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">5.0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">32.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">temp_status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">critmsg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Temp is critical&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">warnmsg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Temp is abnormal&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">okmsg&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;Temp is OK&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">celsius&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">read_temp&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">tcrit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="n">critmsg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">elsif&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">celsius&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">read_temp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">between&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">tcrit&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">twarn&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="n">warnmsg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">elsif&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">fahrenheit&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">temp_to_fahrenheit&lt;/span> &lt;span class="o">&amp;gt;&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">tcrit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="n">critmsg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">elsif&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">fahrenheit&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="n">temp_to_fahrenheit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">between&lt;/span>&lt;span class="err">?&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">tcrit&lt;/span>&lt;span class="p">],&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">twarn&lt;/span>&lt;span class="p">])&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="n">warnmsg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="n">okmsg&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">exit&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">run&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">fahrenheit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="s1">&amp;#39;Current Temp: &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">temp_to_fahrenheit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; Fahrenheit&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">puts&lt;/span> &lt;span class="s1">&amp;#39;Current Temp: &amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="n">read_temp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_s&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; Celsius&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">temp_status&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Yikes! Yeah, that&amp;rsquo;s a lot, but it boils down to a few key options you can include in a check:&lt;/p>
&lt;ul>
&lt;li>Celsius&lt;/li>
&lt;li>Fahrenheit&lt;/li>
&lt;li>Warning temp&lt;/li>
&lt;li>Critical temp&lt;/li>
&lt;/ul>
&lt;p>Again, this check can be super-generic, and it&amp;rsquo;s got the option for Celsius, so what&amp;rsquo;s not to love?&lt;/p>
&lt;p>Alright, so one last check to take a look at as an example&amp;hellip;metrics!&lt;/p>
&lt;h3 id="temp-sensor-metric-check">Temp Sensor Metric Check
&lt;/h3>&lt;p>So this particular check is SUPER useful if you want to see your temp trends over time. It looks like this:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;span class="lnt">34
&lt;/span>&lt;span class="lnt">35
&lt;/span>&lt;span class="lnt">36
&lt;/span>&lt;span class="lnt">37
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl"> &lt;span class="c1"># Set up variables&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">initialize&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">super&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;modprobe w1-gpio&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">system&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;modprobe w1-therm&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">basedir&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;/sys/bus/w1/devices/&amp;#39;&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">freeze&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">device_folder&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Dir&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">glob&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">basedir&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;28*&amp;#39;&lt;/span>&lt;span class="p">)[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="err">@&lt;/span>&lt;span class="n">device_folder&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;/w1_slave&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">read_temp&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">read&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">while&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="mf">4.&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">]&lt;/span> &lt;span class="o">!=&lt;/span> &lt;span class="s1">&amp;#39;YES&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sleep&lt;/span> &lt;span class="mf">0.2&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="ne">File&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">readlines&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="err">@&lt;/span>&lt;span class="n">device_file&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">equals_pos&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">index&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;t=&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="n">equals_pos&lt;/span> &lt;span class="o">==&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">lines&lt;/span>&lt;span class="p">[&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">][&lt;/span>&lt;span class="n">equals_pos&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">2.&lt;/span>&lt;span class="o">.-&lt;/span>&lt;span class="mi">1&lt;/span>&lt;span class="p">]&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">chomp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_f&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">1000.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">temp_to_fahrenheit&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">read_temp&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mf">9.0&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mf">5.0&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mf">32.0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">def&lt;/span> &lt;span class="nf">run&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">timestamp&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="n">Time&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">now&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">to_i&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="n">config&lt;/span>&lt;span class="p">[:&lt;/span>&lt;span class="n">celsius&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ok&lt;/span> &lt;span class="n">output&lt;/span> &lt;span class="s2">&amp;#34;#{config[:scheme]}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">read_temp&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">else&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ok&lt;/span> &lt;span class="n">output&lt;/span> &lt;span class="s2">&amp;#34;#{config[:scheme]}&amp;#34;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="n">temp_to_fahrenheit&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">round&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">2&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">end&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>When we write a metric check in Sensu, this won&amp;rsquo;t be a &amp;ldquo;status&amp;rdquo; type check (think &amp;ldquo;up&amp;rdquo; or &amp;ldquo;down&amp;rdquo;, or &amp;ldquo;OH CRAP THIS THRESHHOLD&amp;rsquo;S BEEN HIT&amp;rdquo;), but more of a &amp;ldquo;here&amp;rsquo;s the data&amp;rdquo; type check. Cool, so now that that&amp;rsquo;s all out of the way, let&amp;rsquo;s talk about the cool part, writing our checks.&lt;/p>
&lt;h1 id="writing-the-checks">Writing the Checks
&lt;/h1>&lt;p>Sensu&amp;rsquo;s check definitions are all written in JSON (trust me, I know the pains of trailing or missing commas). So when we write a check for the KegPi, we&amp;rsquo;ll have to write this all in JSON and it&amp;rsquo;s SUPER CRAZY IMPORTANT that you have the check scripts living on your Pi. To do that, just do the following:&lt;/p>
&lt;p>&lt;code>git clone https://github.com/asachs01/sensu-plugins-rpi-sensors.git&lt;/code>&lt;/p>
&lt;p>Cool, done? Awesome.&lt;/p>
&lt;p>So let&amp;rsquo;s take a look at three checks that correspond to the scripts I shared:&lt;/p>
&lt;p>&lt;em>&lt;strong>check-temp-sensor&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;checks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;check-temp-sensor&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;command&amp;#34;: &amp;#34;/home/pi/Documents/sensu-plugins-rpi-sensors/bin/check-temp-sensor.rb -F -w 45 -c 60&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;interval&amp;#34;: 15,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;subscribers&amp;#34;: [&amp;#34;kegpi&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;handlers&amp;#34;: [&amp;#34;email&amp;#34;, &amp;#34;slack&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;occurrences&amp;#34;: 3,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;refresh&amp;#34;: 600
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>&lt;strong>check-contact-sensor&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;checks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;check-contact-sensor&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;command&amp;#34;: &amp;#34;sudo /home/pi/Documents/scratchpad_kegpi/bin/check-contact-sensor.rb -p 22&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;interval&amp;#34;: 10,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;occurrences&amp;#34;: 8,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;refresh&amp;#34;: 120,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;subscribers&amp;#34;: [&amp;#34;kegpi&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;contacts&amp;#34;: [&amp;#34;aaron&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;handlers&amp;#34;: [&amp;#34;slack&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>&lt;strong>metrics-temp-sensor&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;checks&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;metrics-temp-sensor&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;command&amp;#34;: &amp;#34;/home/pi/Documents/sensu-plugins-rpi-sensors/bin/metrics-temp-sensor.rb -F&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;metric&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;interval&amp;#34;: 15,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;metrics-temp&amp;#34;: &amp;#34;&amp;lt;URL TO GRAPHITE GRAPH&amp;gt;&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;subscribers&amp;#34;: [&amp;#34;kegpi&amp;#34;],
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;handlers&amp;#34;: [&amp;#34;graphite&amp;#34;]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Those are what the checks look like on a practical level. You&amp;rsquo;ll notice the &lt;code>contact&lt;/code> attribute is present in these checks. That&amp;rsquo;s because I&amp;rsquo;m running a Sensu Enterprise deployment and taking advantage of contact routing&amp;hellip;even though I&amp;rsquo;m the only one monitoring the kegerator. &lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>So there you have it&amp;ndash;some working checks that are at this point in time, checking the contact and temperature sensors attached ot the Pi.&lt;/p>
&lt;h1 id="sending-the-data-to-other-sources">Sending the Data to Other Sources
&lt;/h1>&lt;p>Before I wrap this up, let&amp;rsquo;s do a quick discussion about how you can send the data to other sources and get some cool graphs out of the deal. Personally, I have the data being sent to two sources: an InfluxDB instance and a Graphite instance. The reason for exporting to two data sources simply comes down to the fact that I can perform a quick bit of magic in my check and embed my Graphite graph into my check for a quick visualization of the temperature. Also, I much prefer the graphs I can get out of Influx, but alas, those aren&amp;rsquo;t embeddable.&lt;/p>
&lt;p>So how does the data make it to the Graphite and InfluxDB instances? Enter our handlers. You&amp;rsquo;ll notice in the checks defined above, I have my influxdb and graphite handlers specified. Just like everything else in Sensu, this is done via JSON configuration files:&lt;/p>
&lt;p>Our Graphite configuration;
&lt;em>&lt;strong>/etc/sensu/conf.d/graphite.json&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;handlers&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;graphite&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;tcp&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;mutator&amp;#34;: &amp;#34;only_check_output&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;timeout&amp;#34;: 30,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;socket&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;host&amp;#34;: &amp;#34;graphite.company.tld&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;port&amp;#34;: 2003
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Our InfluxDB configuration (both the Influx configuration and requisite handler):&lt;/p>
&lt;p>&lt;em>&lt;strong>/etc/sensu/conf.d/influxdb.json&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;span class="lnt">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;influxdb&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;host&amp;#34;: &amp;#34;192.168.1.5&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;port&amp;#34;: &amp;#34;8086&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;database&amp;#34;: &amp;#34;sensu&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;username&amp;#34;: &amp;#34;user&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;password&amp;#34;: &amp;#34;password&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>&lt;em>&lt;strong>/etc/sensu/conf.d/influx-tcp.json&lt;/strong>&lt;/em>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;handlers&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;influx-tcp&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;type&amp;#34;: &amp;#34;pipe&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;command&amp;#34;: &amp;#34;/opt/sensu/embedded/bin/metrics-influxdb.rb&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>With those files added, we&amp;rsquo;re able to then send the check data from the KegPi to Graphite and InfluxDB respectively.&lt;/p>
&lt;h1 id="wrapping-up">Wrapping Up
&lt;/h1>&lt;p>Whew! This post has been a bit of a long one, and I thank you for sticking through the read until this point. If you have any questions about any aspect of this, don&amp;rsquo;t hesitate to leave a comment down below.&lt;/p>
&lt;p>Thanks for reading!&lt;/p></description></item><item><title>How I Homebrew</title><link>https://aaron.sachs.blog/archive/how-i-homebrew/</link><pubDate>Tue, 17 Apr 2018 16:48:02 +0000</pubDate><guid>https://aaron.sachs.blog/archive/how-i-homebrew/</guid><description>&lt;p>I&amp;rsquo;ve met quite a few homebrewers over the years and have learned tons from them. One of the things I always like asking about it their setup and getting to know what they use on brew day.&lt;/p>
&lt;p>I figured it&amp;rsquo;s time for me to do a HIB (How I Homebrew) post and let you know what I started brewing on, and where I&amp;rsquo;ve progressed.&lt;/p>
&lt;h3 id="for-starters">For Starters
&lt;/h3>&lt;p>When I first started brewing, I started on a hand-me-down &lt;a class="link" href="https://www.mrbeer.com/beer-making-kits/craft-beer-kits" target="_blank" rel="noopener"
>Mr. Beer&lt;/a> kit that had solidified LME with it. I went to Walmart and picked up a cheap 3 gallon aluminum kettle, and brewed my first beer (an ESB).&lt;/p>
&lt;p>It wasn&amp;rsquo;t long before I realized that I wantd to brew larger batches and to do that, I&amp;rsquo;d need to upgrade. I upgraded my fermentation vessel (the Mr. Beer LBK) first. This was great, but I was essentially making extract in my undersized brew kettle, which I upgraded next. This began a long process of creating the piecemeal setup that I currently have.&lt;/p>
&lt;h3 id="currently-using">Currently Using&amp;hellip;
&lt;/h3>&lt;p>This is the fun part for me. I&amp;rsquo;ll skip over all the sequential upgrades, and get to the good stuff. Here&amp;rsquo;s what I&amp;rsquo;m currently using, and am quite happy with:&lt;/p>
&lt;ul>
&lt;li>2 x &lt;a class="link" href="https://www.heb.com/product-detail/imusa-aluminum-tamale-steamer/861634" target="_blank" rel="noopener"
>8gal Tamale Steamers&lt;/a> (boil kettle &amp;amp; HLT)&lt;/li>
&lt;li>&lt;a class="link" href="https://www.austinhomebrew.com/Igloo-Cooler-Mash-Tun-with-False-Bottom--10-Gallon_p_5722.html" target="_blank" rel="noopener"
>Igloo mash tun&lt;/a>&lt;/li>
&lt;li>Some copper tubing from Home Depot (immersion chiller)&lt;/li>
&lt;li>2x PVC buckets (primary fermenters)&lt;/li>
&lt;li>2x 6gal glass carboys (secondary fermenters)&lt;/li>
&lt;li>Bayou Classic w/ 6&amp;quot; burner&lt;/li>
&lt;/ul>
&lt;p>But wait! There&amp;rsquo;s more!&lt;/p>
&lt;p>I&amp;rsquo;ve got some incoming upgrades, namely a 10&amp;quot; burner for the Bayou Classic stand, and a &lt;a class="link" href="https://jadedbrewing.com/collections/frontpage/products/the-hydra" target="_blank" rel="noopener"
>Jaded Brewing Hydra&lt;/a>! I&amp;rsquo;m hoping these will shorten my brew day. Not that I &lt;em>want&lt;/em> them to be short, but I&amp;rsquo;m hoping for them to be a bit more efficient. Anywho, that&amp;rsquo;s the current setup!&lt;/p></description></item><item><title>Monitoring Raspberry Pi's with Sensu</title><link>https://aaron.sachs.blog/archive/monitoring-raspberry-pis-with-sensu/</link><pubDate>Thu, 16 Nov 2017 20:16:08 +0000</pubDate><guid>https://aaron.sachs.blog/archive/monitoring-raspberry-pis-with-sensu/</guid><description>&lt;p>Back in August, I took a Customer Success role at &lt;a class="link" href="https://sensuapp.org" target="_blank" rel="noopener"
>Sensu&lt;/a>. I&amp;rsquo;d been familiar with Sensu through my various bits of tinkering and dabbling with monitoring in the past, and was happy to take the role and work with the Sensu team officially.&lt;/p>
&lt;p>Now that I&amp;rsquo;ve been working with Sensu for a few months (and am officially on paternity leave for the next several weeks), I decided it was time to revisit the idea of using Sensu to monitor my Kegpi&amp;rsquo;s various sensors. I&amp;rsquo;d hit some blocks previously, but came back to it with some fresh eyes. Lo and behold, I&amp;rsquo;ve got it working! Let&amp;rsquo;s walk through how I&amp;rsquo;ve got it running.&lt;/p>
&lt;h3 id="the-setup">The Setup
&lt;/h3>&lt;p>Here are the prerequisites for getting Sensu to work on your Raspberry Pi:&lt;/p>
&lt;ul>
&lt;li>Ruby &amp;gt; 2.0&lt;/li>
&lt;li>Rubygems
&lt;code>sudo apt-get install ruby ruby-dev&lt;/code> (this should install rubygems by default)&lt;/li>
&lt;li>Sensu gem
&lt;code>sudo gem install sensu&lt;/code>&lt;/li>
&lt;li>A working Sensu server (you can snag one quick by downloading Vagrant, cloning my &lt;a class="link" href="https://github.com/asachs01/sensu-up-and-running" target="_blank" rel="noopener"
>&amp;ldquo;Sensu Up and Running&amp;rdquo; repo&lt;/a>, and doing a &lt;code>vagrant up&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3 id="configuration">Configuration
&lt;/h3>&lt;p>Before you get started, ensure you&amp;rsquo;ve added the &lt;code>sensu&lt;/code> user:&lt;/p>
&lt;ul>
&lt;li>&lt;code>useradd sensu&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="sensu">Sensu
&lt;/h4>&lt;p>By default, the Sensu gem installs three services: &lt;code>sensu-client&lt;/code>, &lt;code>sensu-server&lt;/code>, and &lt;code>sensu-api&lt;/code>. These form the core components of any Sensu installation, but we&amp;rsquo;re ultimately about getting a client up and running on the Raspi. Before we go too much futher into configuring Sensu, I recommend that if you&amp;rsquo;re not familiar with Sensu as a monitoring framework, you should take a moment and watch some of &lt;a class="link" href="https://www.youtube.com/playlist?list=PLqLtpBjHqwC-4o7HLtK3MM2V_GdtSh-Dw" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s free training videos&lt;/a>.&lt;/p>
&lt;p>Presuming you&amp;rsquo;ve already installed the gem, the commands to manage the Sensu client are located in &lt;code>/usr/local/bin&lt;/code>. The configuration files, however, are located in &lt;code>/etc/sensu/conf.d&lt;/code>. You&amp;rsquo;ll likely have to create that directory:&lt;/p>
&lt;p>&lt;code>sudo mkdir -p /etc/sensu/conf.d&lt;/code>&lt;/p>
&lt;p>From there, we&amp;rsquo;ll add three different configuration files, as per the &lt;a class="link" href="https://sensuapp.org/docs" target="_blank" rel="noopener"
>Sensu Documentation&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>client.json&lt;/code>&lt;/li>
&lt;li>&lt;code>rabbitmq.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s what they&amp;rsquo;ll look like:&lt;/p>
&lt;p>client.json:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;client&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;environment&amp;#34;: &amp;#34;development&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;subscriptions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dev&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>rabbitmq.json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rabbitmq&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;host&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;port&amp;#34;: 5672,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;vhost&amp;#34;: &amp;#34;/sensu&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;user&amp;#34;: &amp;#34;sensu&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;password&amp;#34;: &amp;#34;secret&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;heartbeat&amp;#34;: 30,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;prefetch&amp;#34;: 50
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Finish off by ensuring the permissions for all the files in &lt;code>/etc/sensu/&lt;/code> are owned by sensu:&lt;/p>
&lt;ul>
&lt;li>&lt;code>chown sensu. /etc/sensu/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>NOTE&lt;/strong>: The credentials listed above should be changed. They&amp;rsquo;re merely examples pulled straight from the Sensu documentation and should NOT be used as is on any system you care about. You&amp;rsquo;ll also need to chage the IP addresses for Rabbit to the IP of the system(s) you have those running on. If you&amp;rsquo;re using the Sensu Up and Running Vagrant box, the IP addresses will be the same.&lt;/p>
&lt;h4 id="systemd">Systemd
&lt;/h4>&lt;p>If you&amp;rsquo;re used to a system using systemd for service management, you&amp;rsquo;ll be familiar with the service files located in &lt;code>/etc/systemd/system&lt;/code>. Sensu includes service files for each of the components, but for them to work on a Raspberry Pi, they need to be slightly modified. You&amp;rsquo;ll need to create the service file like so:&lt;/p>
&lt;p>&lt;code>sudo vim /etc/systemd/system/sensu-client.service&lt;/code>&lt;/p>
&lt;p>With the following content:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[Unit]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Description=sensu client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Service]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User=sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Group=sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ExecStart=/usr/local/bin/sensu-client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">KillMode=process
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Restart=on-failure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RestartSec=1min
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Install]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>From there, start the service:
&lt;code>sudo systemctl start sensu-client&lt;/code>&lt;/p>
&lt;p>And set it to start at boot:
&lt;code>sudo systemctl enable sensu-client&lt;/code>&lt;/p>
&lt;p>Which, if you&amp;rsquo;re using the Sensu Up and Running repo I mentioned earlier, should get you something that looks like this:&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/kegpi-sensu.png"
loading="lazy"
alt="kegpi-sensu"
>&lt;/p>
&lt;h3 id="next-steps">Next Steps
&lt;/h3>&lt;p>So what do you do after getting Sensu working on your Raspi? Well, it&amp;rsquo;s up to you! In my case, I&amp;rsquo;ll use it to monitor the temperature, whether or not the door is open, and remaining liquid in the kegs for my kegerator.&lt;/p>
&lt;p>In your case, you may want to monitor some system-level activity, like load, available RAM, or something of the like. You could also use it to say, monitor a web app you&amp;rsquo;re running on the Raspi, or, since Sensu&amp;rsquo;s plugins can be written in any programming language, use it to monitor any number of sensors you can attach to the Pi. Again, if you haven&amp;rsquo;t already, take a look over &lt;a class="link" href="https://www.youtube.com/playlist?list=PLqLtpBjHqwC-4o7HLtK3MM2V_GdtSh-Dw" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s training videos&lt;/a> to get a better idea of how Sensu works and what you can do with it.&lt;/p></description></item><item><title>Moving to Kegging my Homebrew</title><link>https://aaron.sachs.blog/archive/moving-to-kegging/</link><pubDate>Tue, 22 Aug 2017 17:49:16 +0000</pubDate><guid>https://aaron.sachs.blog/archive/moving-to-kegging/</guid><description>&lt;p>I&amp;rsquo;ve posted previously about &lt;a class="link" href="http://aaron.sachs.blog/how-homebrewing-saved-me-from-burnout/" target="_blank" rel="noopener"
>homebrewing&lt;/a> and have been brewing for almost three years now. Back in April, I took to destroying a perfectly good mini fridge to turn it into a kegerator.&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_105320.jpg"
loading="lazy"
alt="IMG_20170403_105320"
>&lt;/p>
&lt;p>As any homebrewer can tell you, bottling is a pain in the ass. The delabling (if you&amp;rsquo;re reusing bottles), the santization, and the bottle carbonization makes for a rather long and laborious process. Because I&amp;rsquo;d finally had it with bottling, I decided that kegging would be a wiser choice since:&lt;/p>
&lt;ol>
&lt;li>Less time would be spent on bottling&lt;/li>
&lt;li>Carbonization would be better controlled&lt;/li>
&lt;li>For most ales, production time would be cut by a week&lt;/li>
&lt;/ol>
&lt;p>Thankfully, my assumptions have proven to be true. So let&amp;rsquo;s walk through what it took to make the kegerator.&lt;/p>
&lt;h3 id="the-build">The Build
&lt;/h3>&lt;p>I started off with the following hardware:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://www.amazon.com/Whirlpool-Stainless-Compact-Refrigerator-Fridge/dp/B00XQLQXMY" target="_blank" rel="noopener"
>Whirlpool 4.3 cu ft mini fridge&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.beveragefactory.com/draftbeer/towers/doublefaucet/D4743DT___6843.shtml" target="_blank" rel="noopener"
>Chrome plated dual faucet tower&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.midwestsupplies.com/draft-brewer-flex-keg-system" target="_blank" rel="noopener"
>Draft Brewer Flex Keg System&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.austinhomebrew.com/Aluminum-CO2-Tank--5-lb_p_4693.html" target="_blank" rel="noopener"
>Aluminum CO2 Tank - 5 lb&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.beveragefactory.com/draftbeer/driptray/cutout/kegco-surface-mount-drip-tray-seco1610.html" target="_blank" rel="noopener"
>Surface Mount Drip Tray&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I won&amp;rsquo;t go through the whole process of assembling, since the post over at &lt;a class="link" href="https://missionarybrewer.wordpress.com/how-to-build-your-own-kegerator/" target="_blank" rel="noopener"
>missionarybrewer&lt;/a> (which my build was largely based on) covers the steps more than sufficiently. I will mention a few gotchas for the particular fridge I used:&lt;/p>
&lt;ul>
&lt;li>There are coolant lines running over in the upper rear left corner. DON&amp;rsquo;T drill back there&lt;/li>
&lt;li>The 4.3 cu ft size is just a hair too small for both kegs to fit comfortably. I ended up using a multitool to carve out the front of the door, as well as the molding for holding the shelves so that the kegs would fit.&lt;/li>
&lt;/ul>
&lt;p>Now, some pics of the kegerator:&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_162917.jpg"
loading="lazy"
alt="IMG_20170403_162917"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_193658.jpg"
loading="lazy"
alt="IMG_20170403_193658"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_193702.jpg"
loading="lazy"
alt="IMG_20170403_193702"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_193658-1.jpg"
loading="lazy"
alt="IMG_20170403_193658-1"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_193706.jpg"
loading="lazy"
alt="IMG_20170403_193706"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_193711.jpg"
loading="lazy"
alt="IMG_20170403_193711"
>&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/IMG_20170403_231824.jpg"
loading="lazy"
alt="IMG_20170403_231824"
>&lt;/p>
&lt;p>If you&amp;rsquo;ve got any questions, feel free to reach out and let me know!&lt;/p></description></item><item><title>Moving (Back) To Linux</title><link>https://aaron.sachs.blog/archive/moving-back-to-linux/</link><pubDate>Tue, 22 Aug 2017 00:57:25 +0000</pubDate><guid>https://aaron.sachs.blog/archive/moving-back-to-linux/</guid><description>&lt;p>I&amp;rsquo;m a bit of a productivity nerd, I&amp;rsquo;ll admit. Over the last couple of years, I&amp;rsquo;ve cultivated a workflow that revolved around a lot of OS X tools that I LOVED:&lt;/p>
&lt;ul>
&lt;li>Alfred&lt;/li>
&lt;li>TextExpander&lt;/li>
&lt;li>iTerm2&lt;/li>
&lt;/ul>
&lt;p>These tools were my bread and butter. My professional life, if you will. However, I found myself in a bit of an odd spot in recent months&amp;ndash;my MacBook Air was proving to be underpowered for running VM&amp;rsquo;s, and doing any sort of virtualized anything (which I wanted to be able to do for some training and other projects). While I wanted a shiny new MacBook Pro, I found it to be overpriced, and something that I couldn&amp;rsquo;t justify spending the kind of money on, despite that all of my tools were built exclusively for the MBP platform.&lt;/p>
&lt;p>So I decided to move back to Linux. At Rackspace, I&amp;rsquo;d had an Optiplex workstation that ran Fedora, and it worked OK, if not for the fact that every update screwed up my display drivers. I honestly wasn&amp;rsquo;t very keen to be back on Linux. The last thing I wanted to do was be in a situation where I&amp;rsquo;d have to cobble some sort of solution together, and it would require more time and effort that I have at the moment.&lt;/p>
&lt;p>Serendipitously, one of my former coworkers and her husband turned me onto Korora. To be fair, there&amp;rsquo;s not a whole lot more that Korora has over Fedora. Thus far, it&amp;rsquo;s proven to have some prettier defaults. Not much more than what Fedora would have, but it beats taking the time out of my day to hunt around and change things.&lt;/p>
&lt;p>To my delight, the experience has been surprisingly Mac-like (even to the point of competing with ElementaryOS). To my further delight, it has dark themes out of the box (swoon), which makes working at night much less stressful on the eyes.&lt;/p>
&lt;p>The biggest challenge in moving back to a Linux distro as a daily driver has been finding a replacement for Alfred &amp;amp; TextExpander. The terminal challenge was easily solved with either terminator or tmux (now being a bit wiser, I&amp;rsquo;m using tmux with GREAT success). However, finding something that had similar functionality to TextExpander and Alfred was a bit difficult at the onset.&lt;/p>
&lt;p>I&amp;rsquo;d tried Albert, an Alfred-like replacement for Linux, but to no avail. While Albert&amp;rsquo;s got a decent start, it lacks quite a bit of Alfred&amp;rsquo;s functionality. For example, Alfred has built-in clipboard management (now using Clipit), built-in snippets (which Autokey seems to do a decent job of), and workflows, which I haven&amp;rsquo;t quite figured out a replacement for and probably won&amp;rsquo;t at this point since I wasn&amp;rsquo;t using them all that much anyways.&lt;/p>
&lt;p>At the time of writing this post, I&amp;rsquo;m back up to speed in terms of where I was with my Mac. I&amp;rsquo;ve managed to recreate my level of productivity and automation with the following:&lt;/p>
&lt;ul>
&lt;li>Alfred &amp;ndash;&amp;gt; Korora menu button/Clipit&lt;/li>
&lt;li>TextExpander &amp;ndash;&amp;gt; Autokey&lt;/li>
&lt;li>iTerm2 &amp;ndash;&amp;gt; Terminator/tmux&lt;/li>
&lt;/ul>
&lt;p>Next on my productivity list is tackling my dotfiles. More to follow!&lt;/p>
&lt;p>Cheers,&lt;/p>
&lt;p>Aaron&lt;/p></description></item><item><title>Thinking Spaces (A Support Driven Challenge Post)</title><link>https://aaron.sachs.blog/archive/thinking-spaces-a-support-driven-challenge-post/</link><pubDate>Tue, 22 Aug 2017 00:42:54 +0000</pubDate><guid>https://aaron.sachs.blog/archive/thinking-spaces-a-support-driven-challenge-post/</guid><description>&lt;p>It&amp;rsquo;s week 3 in the &lt;a class="link" href="https://supportdriven.com/2016/10/21/stretch-your-typing-fingers-support-driven-6-week-writing-challenge/" target="_blank" rel="noopener"
>Support Driven Writing Challenge&lt;/a>, and this week I&amp;rsquo;m posting about my thinking space. Let&amp;rsquo;s start out by establishing that I&amp;rsquo;m an introvert. I may be a bit of an extroverted introvert, but an introvert nonetheless. So naturally, being around people, or in social situations does not allow me to think easily. I&amp;rsquo;ll confess that the larger the group of people I&amp;rsquo;m around, the more taxing it is for me to sort through my thoughts. It&amp;rsquo;s like people are a mental jamming signal for me. Now, this excludes people that I&amp;rsquo;m very comfortable around. For example, a small group of friends can make sorting out my thoughts easier, as they know me, know how I think, and can assist in the sorting.&lt;/p>
&lt;p>For me, there are a couple of situations where thoughts get sorted out. I&amp;rsquo;ll start with the most&amp;hellip;unconventional one: the shower.
&lt;img src="http://www.hercampus.com/sites/default/files/2014/10/15/4672683435_3eb07c1b68.jpg"
loading="lazy"
>&lt;/p>
&lt;p>There&amp;rsquo;s something about a shower that allows me to sort out my thoughts better than any other space. And I guess that there&amp;rsquo;s &lt;a class="link" href="http://mentalfloss.com/article/52586/why-do-our-best-ideas-come-us-shower" target="_blank" rel="noopener"
>a bit of proof&lt;/a> that a shower certainly lends itself to that sort of thing. It&amp;rsquo;s in the shower that I&amp;rsquo;ve realized what I&amp;rsquo;ve been doing incorrectly when writing a script or program, had revelations about why some personal relationships work the way they do, and have come up with designs for some shave brushes.&lt;/p>
&lt;p>The second space for me to work things out is on the porch. A great example of this is the recent post/video I made of &lt;a class="link" href="wildwood-flower-clawhammer-banjo" >me playing around on the banjo&lt;/a>. Porch time usually requires a good pipe, and some bourbon (Basil Hayden is my go to, if you&amp;rsquo;re wondering). There&amp;rsquo;s something magical about using music to work out my thoughts, and the pipe/bourbon certainly don&amp;rsquo;t hurt either.&lt;/p>
&lt;p>&lt;img src="https://s-media-cache-ak0.pinimg.com/564x/de/db/58/dedb58a2ff0094360672dc49b9ef0082.jpg"
loading="lazy"
>&lt;/p>
&lt;p>The last thinking space for me is at a good coffee shop, usually with a friend to talk things out. There&amp;rsquo;s something about having someone else to bounce ideas off of over a cup of coffee that I find refreshing. I remember that I used to do this weekly with my friend and mentor, Mike. We&amp;rsquo;d meet every Tuesday at Old City Java in Knoxville, Tennessee for mentoring sessions. We&amp;rsquo;d also bounce ideas off of each other, and I found those times to be the most rewarding when I needed to sort things out, whether it be about family, work, or life in general.&lt;/p>
&lt;p>I do want to add an observation here&amp;ndash;the importance of being disconnected. I&amp;rsquo;ve found that being constantly on a device seems to add to my mental pile of work. There&amp;rsquo;s also &lt;a class="link" href="http://www.businessinsider.com/the-scientific-benefits-of-being-bored-2016-1/#it-lets-you-know-when-something-is-amiss-2" target="_blank" rel="noopener"
>some research&lt;/a> that lends some validity to this observation. Whenever I&amp;rsquo;m in any of those thinking spaces (and especially in the shower), I&amp;rsquo;ve found that it&amp;rsquo;s crucial to be disconnected&amp;hellip;even if I don&amp;rsquo;t do a great job of disconnecting. I&amp;rsquo;ve also found that the lack of disconnecting and allowing myself to be bored is a major contributor to getting burnt out. If I&amp;rsquo;m letting that mental pile of work continue to grow, then I&amp;rsquo;m not doing anything to get out from under it. There&amp;rsquo;s also a bit of a rant here on being present, learning to switch off, and the value of actually engaging with real live humans here too, but I think I&amp;rsquo;ll save that for another post.&lt;/p></description></item><item><title>How I Work</title><link>https://aaron.sachs.blog/archive/how-i-work/</link><pubDate>Tue, 22 Aug 2017 00:42:01 +0000</pubDate><guid>https://aaron.sachs.blog/archive/how-i-work/</guid><description>&lt;p>A long time ago, in a galaxy far away, I thought I was productive. I used a whiteboard (still do, by the way) for my todo lists, was running a Windows laptop for work, and that worked. When I moved to Texas and started working at Rackspace, things changed&amp;hellip;drastically. First, my workload changed, and it changed how I had to approach my workload. I went from a workload that was so full of technical snowflakes (read &amp;lsquo;Unique and one-off issues&amp;rsquo;) and remote support (me logging into customers&amp;rsquo; laptops and desktops), that any sort of automation was useless.&lt;/p>
&lt;p>When I started at Rackspace, I found that my workload was largely repeat issues (low disk on a server, same Apache misconfigurations, same user creation specifications). This led to me using quite a few tools that were focused on 1.) accurately and quickly diagnosing, or solving those issues, and 2.) using tools that allowed me to make templated responses (a la TextExpander and/or aText). While I tend to shy away from response templates, a consistent queue of 80-100 tickets and a focus on response times necessitated working quickly, and utilizing tools that allowed me to do so.&lt;/p>
&lt;p>That said, I still carry that need and drive to work quickly and efficiently, and my work setup and the software I use (I feel), reflect that need. My setup also enables me to be mobile and pack light (sans the desktop setup), since working remotely is definitely contributing to my former coffee shop rat habits.&lt;/p>
&lt;p>So let&amp;rsquo;s get to the good stuff:&lt;/p>
&lt;h2 id="gear-and-software">Gear and Software
&lt;/h2>&lt;h4 id="my-gear">My Gear
&lt;/h4>&lt;ul>
&lt;li>MacBook Air (early 2015)&lt;/li>
&lt;li>Custom desktop dual booting Fedora and Windows&lt;/li>
&lt;li>2x Dell 2715Q monitors&lt;/li>
&lt;li>Logitech Z533 desktop sound system&lt;/li>
&lt;/ul>
&lt;h4 id="when-im-on-the-move">When I&amp;rsquo;m On the Move
&lt;/h4>&lt;ul>
&lt;li>&lt;a class="link" href="http://www.pacsafe.com/venturesafe-25l-gii-travel-pack.html" target="_blank" rel="noopener"
>Pacsafe Venturesafe 25L backpack&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.cocooninnovations.com/product_info.php?cat_id=61&amp;amp;product_id=167" target="_blank" rel="noopener"
>Gridit XL Organizer&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.amazon.com/gp/product/B01DZ4KHYQ/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1" target="_blank" rel="noopener"
>Aukey USB Charger&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.amazon.com/Anker-PowerCore-20100-Capacity-Technology/dp/B00X5RV14Y/ref=sr_1_1?ie=UTF8&amp;amp;qid=1478554908&amp;amp;sr=8-1&amp;amp;keywords=anker&amp;#43;20000" target="_blank" rel="noopener"
>Anker PowerCore 20100&lt;/a>&lt;/li>
&lt;li>Copious amounts of usb keys&lt;/li>
&lt;li>1tb Western Digital USB3 drive&lt;/li>
&lt;/ul>
&lt;h4 id="mac-osx-toolssofware">Mac OSX Tools/Sofware
&lt;/h4>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.boastr.net/" target="_blank" rel="noopener"
>BetterTouchTool&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://smilesoftware.com/textexpander" target="_blank" rel="noopener"
>TextExpander&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://bahoom.com/hyperdock/" target="_blank" rel="noopener"
>HyperDock&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://symless.com/synergy/" target="_blank" rel="noopener"
>Synergy&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://brew.sh/" target="_blank" rel="noopener"
>Homebrew&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://atom.io/" target="_blank" rel="noopener"
>Atom.io&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.iterm2.com/version3.html" target="_blank" rel="noopener"
>iTerm2&lt;/a>&lt;/li>
&lt;li>Slack (not just for messaging)&lt;/li>
&lt;/ul>
&lt;h4 id="other-apps">Other Apps
&lt;/h4>&lt;ul>
&lt;li>&lt;a class="link" href="https://www.lucidchart.com/" target="_blank" rel="noopener"
>Lucidchart&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.brain.fm/" target="_blank" rel="noopener"
>Brain.fm&lt;/a>&lt;/li>
&lt;/ul>
&lt;h4 id="my-workspace">My Workspace
&lt;/h4>&lt;ul>
&lt;li>Hand-built iron pipe desk (I&amp;rsquo;ll show it off in the week 5 post for the Support Driven writing challenge)&lt;/li>
&lt;li>&amp;hellip;Starbucks*&lt;/li>
&lt;/ul>
&lt;h4 id="other-tools">Other Tools
&lt;/h4>&lt;ul>
&lt;li>5&amp;rsquo;x3&amp;rsquo; whiteboard&lt;/li>
&lt;li>&lt;a class="link" href="https://www.codeandquill.com/collections/notebooks/products/origin/?variant=1015774761" target="_blank" rel="noopener"
>Code &amp;amp; Quill Origin Notebook&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>So now that those are out of the way, let me get to my favorite tools. The ones that are indispensable.&lt;/p>
&lt;h2 id="my-favorite-tools">My Favorite Tools
&lt;/h2>&lt;h3 id="favorite-osx-tool-software">Favorite OSX Tool Software:
&lt;/h3>&lt;p>&lt;strong>BetterTouchTool&lt;/strong>: It was either this, or Atom. I know, who knew a text editor could be awesome. Well, it is, and you should totally use it (or SublimeText), if you&amp;rsquo;re not already. But anywho, the real star: BetterTouchTool. I&amp;rsquo;m a sucker for window snapping. You know, having a split screen? I use this DAILY. Not only does it do window snapping, but it also creates hotkeys/macros for doing snapping, other window positioning preferences, and various and sundry other functions. To be honest, I&amp;rsquo;m likely underutilizing it, but it&amp;rsquo;s awesome. Go snag it.&lt;/p>
&lt;h3 id="favorite-non-digital-tool">Favorite Non-Digital Tool:
&lt;/h3>&lt;p>&lt;strong>Gridit XL Organizer&lt;/strong>: Let me say, it&amp;rsquo;s not easy having a favorite out of the tools/gear that I have. The Code &amp;amp; Quill notebook almost won out here. But here&amp;rsquo;s why the Gridit wins: It took the chaos that was my backpack, and brought it all into order. It holds all the cables I have (and let&amp;rsquo;s face it, good cable management is next to godliness) and keeps them tangle-free and organized. It&amp;rsquo;s without a doubt the best $15 (at the time) I&amp;rsquo;ve spent on gear.&lt;/p>
&lt;h3 id="favorite-webapp">Favorite WebApp:
&lt;/h3>&lt;p>&lt;strong>Brain.fm&lt;/strong>: Hands down, Brain.fm is worth the subscription for me to stay sane and focus. I don&amp;rsquo;t do music with lyrics when I need to focus&amp;ndash;I end up jamming out in the middle of coffee shops and get weird looks. I&amp;rsquo;m stuck on this one song in the &amp;ldquo;Intense Focus Mode&amp;rdquo; that I just end up on a roll every single time I listen to the track. I&amp;rsquo;ve used it when I&amp;rsquo;m relaxing too (e.g., reading a book, or writing this post, for example). I can&amp;rsquo;t get enough of Brain.fm. Not only is the app great, but their support is fantastic, and responsive. Definitely worth the subscription.&lt;/p>
&lt;p>As a note, there are some tools that I&amp;rsquo;ve tried like Todoist, Evernote, Magpie, and Wunderlist, just to name some of the ones I formerly used. I&amp;rsquo;ve found that fore me, they just haven&amp;rsquo;t stuck. Instead, I stick to my Code &amp;amp; Quill notebook for notetaking, and have started using Slack&amp;rsquo;s native &amp;lsquo;remind&amp;rsquo; function for task management (they start off on the whiteboard so i remember them first, and then make their way to Slack). This seems to have streamlined a lot of my task management and has done away with the task/notetaking tool overload that I&amp;rsquo;ve found myself in lately.&lt;/p>
&lt;p>Well, there you have it! This, ladies and gents, is how I work.&lt;/p>
&lt;p>* So Starbucks requires a bit of explanation and defense (as most people who know me well find it a bit appalling that even a mild coffee snob like myself would spend his/her time at a Starbucks). Let me start by saying, I&amp;rsquo;ve found that most local coffee shops in SA do one of two things well: amenities or coffee. There&amp;rsquo;s really not a place here that does both well. Most of the local coffee shops focus on the latter, and rightfully so. However, there&amp;rsquo;s a bit of a knock-on effect: there&amp;rsquo;s a ton of people (most of them students, or remote workers like myself) all pounding the poor little consumer-grade wireless network to death. So I have a choice: Great coffee and crap internet, which as most workers know, it&amp;rsquo;s kind of needed to do our jobs, or mediocre coffee and internet comparable to what I have at my house. I opt for the latter, since I tend to do the coffee pretty decently as a former barista.&lt;/p></description></item><item><title>BeerSmith2 RPM</title><link>https://aaron.sachs.blog/archive/beersmith2-rpm/</link><pubDate>Wed, 21 Dec 2016 01:58:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/beersmith2-rpm/</guid><description>&lt;p>I&amp;rsquo;ve been trying to up my beer-making game, and remembered that I had a license to &lt;a class="link" href="http://beersmith.com/" target="_blank" rel="noopener"
>BeerSmith2&lt;/a>, but didn&amp;rsquo;t see that they had any packages available for Fedora/Fedora remixes. So, I did a thing and have &lt;a class="link" href="https://github.com/asachs01/beersmith2rpm" target="_blank" rel="noopener"
>BeerSmith2 2.3.7 in RPM format&lt;/a>.&lt;/p>
&lt;p>Cheers,&lt;/p>
&lt;p>Aaron&lt;/p></description></item><item><title>My Workspace</title><link>https://aaron.sachs.blog/archive/my-workspace/</link><pubDate>Sat, 10 Dec 2016 01:56:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/my-workspace/</guid><description>&lt;p>This post is the last in the &lt;a class="link" href="https://supportdriven.com/2016/10/21/stretch-your-typing-fingers-support-driven-6-week-writing-challenge/" target="_blank" rel="noopener"
>Support Driven Writing Challenge&lt;/a> series that I&amp;rsquo;ve been participating in lately, albeit a bit late. This post is about my workspace.&lt;/p>
&lt;p>As a &lt;a class="link" href="https://inside.recruiterbox.com/welcome-to-my-desk-d215ae7507d6#.cjofla6wu" target="_blank" rel="noopener"
>fellow support driven community member&lt;/a> and remote worker Chelsea noted, being remote means that I can work from anywhere. In my case, it&amp;rsquo;s mostly true (given that I work third shift). My space has been a place that I intentionally crafted to be a place that would make going from a first shift job to a third shift one tolerable, if not at least somewhat enjoyable.&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/content/images/2017/08/desk.jpg"
loading="lazy"
alt="desk"
>&lt;/p>
&lt;p>That&amp;rsquo;s the hoss of a desk that I hand-built. It&amp;rsquo;s iron pipe and stained pine, and all of 300 lbs (trust me, I attempted to lift it myself). I had previously used a &lt;a class="link" href="http://iamnotaprogrammer.com/Ikea-Standing-desk-for-22-dollars.html" target="_blank" rel="noopener"
>Standesk 2200&lt;/a> while I was at Rackspace, but found the prospects of standing all night to be a bit&amp;hellip;unpleasant.&lt;/p>
&lt;p>I wanted my desk to be something solid, rugged, and something that would hold up to not only normal work, but something that would also function as sort of a work bench when I tinker with electronics. I also wanted it to be something that I could work at all night and not grow too terribly bored at, which is why I added the little terrarium you see in the picture.&lt;/p>
&lt;p>The other elements of the desk are as follows:&lt;/p>
&lt;ul>
&lt;li>2 x Dell 2715q monitors&lt;/li>
&lt;li>Custom desktop dual booting Windows/Linux(Korora)&lt;/li>
&lt;li>Desk fan to circulate the air&lt;/li>
&lt;li>Filing cabinet for various widgets/files&lt;/li>
&lt;li>Logitech Z533 speakers&lt;/li>
&lt;li>&lt;a class="link" href="https://www.amazon.com/gp/product/B00MMR8RVS/ref=oh_aui_search_detailpage?ie=UTF8&amp;amp;psc=1" target="_blank" rel="noopener"
>Sentey gaming headphones&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://www.pcconnection.com/product/logitech-mx-master-wireless-mouse/910-004337/18954486" target="_blank" rel="noopener"
>Logitech Master MX mouse&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.cdw.com/shop/products/Corsair-Gaming-STRAFE-Mechanical-Cherry-MX-Red-keyboard-English-US/3954761.aspx?pfm=qud" target="_blank" rel="noopener"
>Corsair Strafe Keyboard&lt;/a>&lt;/li>
&lt;li>My beloved whiteboard (5x3)&lt;/li>
&lt;/ul>
&lt;p>Overall, I feel that the setup has worked well for working on third shift when I&amp;rsquo;m not doing work at Starbucks/other coffee shops. The only downside will be when the occassion next strikes us to move&amp;hellip;I think I&amp;rsquo;ll use movers for the desk.&lt;/p></description></item><item><title>It Came From the Night Shift</title><link>https://aaron.sachs.blog/archive/it-came-from-the-night-shift/</link><pubDate>Sat, 26 Nov 2016 01:46:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/it-came-from-the-night-shift/</guid><description>&lt;p>Whew, I&amp;rsquo;m catching up on posting for the &lt;a class="link" href="https://supportdriven.com/2016/10/21/stretch-your-typing-fingers-support-driven-6-week-writing-challenge/" target="_blank" rel="noopener"
>Support Driven Writing Challenge&lt;/a>, and I&amp;rsquo;m fairly caught up at this point. So this week&amp;rsquo;s post is a &amp;lsquo;Day In the Life&amp;rsquo; of whatever it is you do. Since I&amp;rsquo;m in my first ever third shift position, this should be interesting!&lt;/p>
&lt;h3 id="the-schedule">The Schedule
&lt;/h3>&lt;p>Before coming to DigitalOcean, I was in a &amp;rsquo;normal&amp;rsquo; 9-5 position. Then, I flipped completely over to 3rd shift when I joined DO. Now I&amp;rsquo;m working 11pm CDT to 7am CDT. I&amp;rsquo;ll walk you through what my typical day looks like:&lt;/p>
&lt;ul>
&lt;li>14:30-15:00: Wake Up, get ready&lt;/li>
&lt;li>15:00-17:00: Head to Starbucks to write, learn, catch up on stuff while people are in the office, maybe run some errands&lt;/li>
&lt;li>17:00-17:30: Head home&lt;/li>
&lt;li>17:30-20:00: Start cooking dinner, run other errands&lt;/li>
&lt;li>20:00-22:00: Take a nap and get ready for my shift&lt;/li>
&lt;li>23:00-07:00: Do all the work&lt;/li>
&lt;/ul>
&lt;p>That&amp;rsquo;s a quick breakdown of the schedule. But what, you ask, does a Customer Success Engineer actually do?&lt;/p>
&lt;h3 id="what-it-is-i-say-i-do-at-do">What it is I say I do at DO
&lt;/h3>&lt;p>Let me start by explaining my team&amp;rsquo;s mission: [To] forge and foster close relationships with key customers by ensuring their success on our platform. What does that mean practically? Well, there are really three &amp;lsquo;hats&amp;rsquo; that our duties fall into:&lt;/p>
&lt;ul>
&lt;li>Account Management&lt;/li>
&lt;li>Tier 2 Support&lt;/li>
&lt;li>Solutions engineering/consulting&lt;/li>
&lt;/ul>
&lt;p>So on any given night, I can have a mix of tasks that is a random collection of those duties. Right now, there is a pretty heavy leaning to support and account management requests since I work primarily with our APAC customers. Let me give you an idea of how these sorts of things fall into a normal night.&lt;/p>
&lt;p>I&amp;rsquo;ll usually come in and give a nod to my colleagues Huck and Jon (depending on the night) on Slack as they&amp;rsquo;re headed out for the evening. I&amp;rsquo;ll also ping our Support team and Cloud Operations team to let them know that I&amp;rsquo;m in, and to ping me if they need anything. From there, I&amp;rsquo;ll catch up on what&amp;rsquo;s gone on during the day. This usually consists of reviewing what&amp;rsquo;s happened in our Slack channels (we have a general channel, as well as a &amp;lsquo;standup&amp;rsquo; channel for any notable issues that occurred, or that need follow up) and perusing my email. A quick note here: I get TONS of email. I&amp;rsquo;ve got everything filtered so that anything that doesn&amp;rsquo;t come in through HelpScout, and isn&amp;rsquo;t a general notification gets pushed to the top of my inbox.&lt;/p>
&lt;p>After I&amp;rsquo;ve caught up on the day and email, I&amp;rsquo;ll check and see if there&amp;rsquo;s been any movement on any Jira tickets I&amp;rsquo;ve opened previously, or if anything is needed from me on them. Nine times out of ten, one of my DayWalker colleagues have addressed the Jira if it&amp;rsquo;s a customer-facing/impacting issue.&lt;/p>
&lt;p>From there, the rest of my time is spent responding to support requests and &lt;a class="link" href="https://do.co/hatch" target="_blank" rel="noopener"
>Hatch&lt;/a>(our initiative to support startups as they launch) applications. The requests that we get are pretty varied. Most of the time, the requests that come in are that a droplet (our term for a VPS) has become unresponsive, or that the customer can&amp;rsquo;t log into the droplet and need us to boot it into a recovery mode. However, we do get some interesting issues during the night. For example, a customer&amp;rsquo;s MongoDB cluster had an issue that resulted in their metadata getting corrupted, and we had to troubleshoot that. Keep in mind that DigitalOcean is a self-managed platform, which means we don&amp;rsquo;t log into customer droplets. This can make troubleshooting a challenge. It&amp;rsquo;s forced me to get better at thinking through an issue, how I would address it/troubleshoot it, and explaining that process to a customer. We also see issues end up being symptomatic of something larger, and may require the customer to re-architect their infrastructure.&lt;/p>
&lt;p>In addition to the customer-initiated support requests, there are also the inevitable issues that arise when dealing with technical gremlins. These tend to manifest themselves in us having to reboot hypervisors (underlying infrastructure that runs customer droplets), and can be for any number of reasons.&lt;/p>
&lt;p>Our solution engineering/consulting process is in the process of changing. When I started, each of the Customer Success Engineers at DO were responsible for consulting/engineering requests and calls that came in to our team. Now, our Customer Success team does more of a qualification process to see if a customer would need to have a chat with our Solutions team, who are the ones who take on more of the engineering/architecting sort of work. When I have those sorts of calls scheduled at night, they now tend to fall into the pre-qualification sort of vein where I chat with the customer to see what problem they are currently experiencing, how they have their infrastructure set up, and what their end goal of the re-architecture process is.&lt;/p>
&lt;p>When I don&amp;rsquo;t have any requests, or issues to address, it can be a bit lonely/quiet, especially working from home. So I&amp;rsquo;ll fill my time learning what I can via Linux Academy, Udemy, and my ever-growing stack of Oreilly ebooks. When that fails, I&amp;rsquo;ll get up and try and give myself a change of scenery. At 3-4am, this is a bit difficult. I&amp;rsquo;m not too keen on wandering around in my Cthulu slippers and having our local law enforcement called due to the &amp;lsquo;creeper in octopus shoes walking around the neighborhood&amp;rsquo; (note: this has NOT happened yet, and I aim to keep it that way). So sometimes, I&amp;rsquo;ll go outside and smoke my pipe, or at the kitchen table, or in front of the TV with some anime playing in the background. In the case of last night, a fire at 2am sounded grand, so I made one and worked outside last night.&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/content/images/2017/08/workFire.jpg"
loading="lazy"
alt="workFire"
>&lt;/p>
&lt;p>I wrap up my shift by doing a brief handoff with our first shift CSE&amp;rsquo;s, greet the wife as she wakes up and heads out to work, and then promptly conk out for the &amp;rsquo;night&amp;rsquo;. I&amp;rsquo;ll be writing a follow up post to this about surviving 3rd shift, since I feel like I could write a small book on it. Stay tuned for more!&lt;/p>
&lt;p>Cheers,&lt;/p>
&lt;p>Aaron&lt;/p></description></item><item><title>The Support Stack At Digital Ocean</title><link>https://aaron.sachs.blog/archive/support-stack-at-digitalocean/</link><pubDate>Fri, 18 Nov 2016 01:45:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/support-stack-at-digitalocean/</guid><description>&lt;p>It&amp;rsquo;s week four of the &lt;a class="link" href="https://supportdriven.com/2016/10/21/stretch-your-typing-fingers-support-driven-6-week-writing-challenge/" target="_blank" rel="noopener"
>Support Driven Writing Challenge&lt;/a>, and sadly, I&amp;rsquo;m a bit behind what with the US holiday and the customary food coma. That said, let&amp;rsquo;s get cracking.&lt;/p>
&lt;h4 id="the-ubiquitous-ticket-queue">The Ubiquitous Ticket Queue
&lt;/h4>&lt;p>I&amp;rsquo;ll start off by saying that the most common way of supporting our customers at DigitalOcean (from a Customer Success Team standpoint), is via support ticket through our home-grown system. That&amp;rsquo;s where most of our work comes from, be it customer-initiated tickets, or automated tickets. A majority of the time, tickets work decently. But there are some pitfalls, especially when working for a self-managed platform like DigitalOcean. Namely, that the ticket approach can seem impersonal&lt;/p>
&lt;h4 id="email-support">Email Support
&lt;/h4>&lt;p>We also use email to support customers working directly with our Customer Success team. This is done via Helpscout, and works fairly well. Emails, while they don&amp;rsquo;t have an SLA attached to them, typically get responded to quite quickly. Emails also tend to not deal so much with in-depth technical issues, and when they do, we usually push that sort of thing to a ticket, so that everything is documented and auditable.&lt;/p>
&lt;h4 id="the-not-so-common-phone-call">The Not-So-Common Phone Call
&lt;/h4>&lt;p>At my previous two positions, phone calls were the bread an butter of what I did, especially at Rackspace. I typically was on the phone with a customer walking them through and issue, and troubleshooting an issue on their server while they watched. It was a bit nerve-wracking at times. However, since DigitalOcean doesn&amp;rsquo;t have a support line, the phone support that we typically do tends to be on the more consultative side. For example, my team works with quite a lot of startups who come through our &lt;a class="link" href="http://do.co/hatch" target="_blank" rel="noopener"
>&amp;ldquo;Hatch&amp;rdquo;&lt;/a> program. Many of the calls that we do are introductory, and I like to think of them as a first date. You know, the &amp;ldquo;Hi, who are you? What do you do? Here&amp;rsquo;s what I do&amp;rdquo; sorts of calls. On the rare occasion, we&amp;rsquo;ll hop on the phone with a customer and troubleshoot over the phone.&lt;/p>
&lt;h4 id="a-view-of-the-other-side-of-the-house">A View of the Other Side of the House
&lt;/h4>&lt;p>Just to give an idea of what our front lines teams do, they typically operate off of tickets, but also include social support via Twitter or Facebook. Our support team definitely sees a higher volume of tickets than our Success team, so our ticketing system shines when they&amp;rsquo;re able to address quite a few tickets in a relatively short amount of time.&lt;/p>
&lt;h4 id="some-thoughts">Some Thoughts
&lt;/h4>&lt;p>I wasn&amp;rsquo;t around for the choosing of any of the components of our support stack, and it&amp;rsquo;s been interesting to read up from other members of the Support Driven community who have had that opportunity to build theirs out. That said, I&amp;rsquo;ve got no opinions really on the platform that&amp;rsquo;s being used to provide support (a la Zendesk, Kayako, Intercom, etc.).&lt;/p>
&lt;p>I will say that I have a bit of a love/hate relationship with ticketing systems. For all the benefits they provide, I find ticketing systems to be the least personal out of any support tool. That may be the communication researcher in me speaking, but I think the loss of verbal/nonverbal queues can exacerbate situations in which those sorts of things are necessary. I can tell a customer in a reply that I empathize with them, and that yeah, it&amp;rsquo;s terrible that X happened, but they don&amp;rsquo;t get to see that. Instead, they&amp;rsquo;re forced to infer my tone/meaning in my reply. And no matter how much I try to instill empathy into a response, there will always be a case where that falls short.&lt;/p>
&lt;p>Phone support, if done well, can eliminate some of that&amp;ndash;namely, the lack of verbal queues. This all goes back to training, though. If a support agent isn&amp;rsquo;t empathetic, and doesn&amp;rsquo;t take the time to put themselves in their customers&amp;rsquo; shoes, all the phone support in the world won&amp;rsquo;t do any good (I&amp;rsquo;m looking at you, Comcast &amp;amp; Time Warner). So I think (and perhaps I&amp;rsquo;ll do a post on this in the future) that while a support stack is important, and should be chosen carefully, it&amp;rsquo;s really a collection of tools to accomplish one purpose: supporting a customer. If the tools don&amp;rsquo;t do it well, then they&amp;rsquo;re not worth choosing. Likewise, it&amp;rsquo;s important to have people on your team who know how to use those tools effectively. If you choose a tool that doesn&amp;rsquo;t allow for being able to pick up on verbal/nonverbal queues, the person behind that tool has to know that weakness, and compensate for it.&lt;/p>
&lt;p>Well, I&amp;rsquo;ve rambled on long enough, and I&amp;rsquo;ve got to get cracking on the next post! Stay tuned for a Day in the Life Of a 3rd shift Customer Success Engineer at DigitalOcean.&lt;/p></description></item><item><title>Wildwood Flower</title><link>https://aaron.sachs.blog/archive/wildwood-flower/</link><pubDate>Fri, 18 Nov 2016 01:45:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/wildwood-flower/</guid><description>&lt;p>I sat down for a bit with a pipe and my banjo. Here&amp;rsquo;s what I ended up recording:&lt;/p>
&lt;!-- raw HTML omitted --></description></item><item><title>My Story</title><link>https://aaron.sachs.blog/archive/my-story/</link><pubDate>Tue, 01 Nov 2016 00:41:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/my-story/</guid><description>&lt;p>I&amp;rsquo;ve told pieces of my story in recent posts. You know, the ones about &lt;a class="link" href="brewing-burnout" >Homebrewing being a salvation&lt;/a>, and &lt;a class="link" href="so-youre-in-customer-success-now-what" >moving to a role in Customer Success&lt;/a> at DigitalOcean. I don&amp;rsquo;t think I&amp;rsquo;ve ever posted about the long, circuitous route that my career has taken. Perhaps it&amp;rsquo;s time to tell you the story. So sit back and grab a cup of joe&amp;hellip;this ride is known to cause whiplash. Trust me, the trail from aspiring academic to customer success engineer is not exactly the smoothest.&lt;/p>
&lt;h3 id="the-younger-wonder-years">The Younger (Wonder) Years
&lt;/h3>&lt;p>My single-prop Cessna carrying supplies to a remote African village hit a patch of turbulence, sending my stomach lurching&amp;hellip;or at least that was the dream I had when I was a kid. All I wanted to do was be a pilot. I was going to go to school like all good kids do, graduate, and be a bush pilot. Things changed when I realized that the school I wanted to attend &lt;a class="link" href="http://articles.chicagotribune.com/2003-03-04/news/0303040410_1_missionary-flight-school-aircraft" target="_blank" rel="noopener"
>was planning on closing&lt;/a>.&lt;/p>
&lt;p>In the mean time, I had taken a trip where we traced the &lt;a class="link" href="http://www.ww2-airborne.us/18corps/101abn/101_overview.html" target="_blank" rel="noopener"
>101st Airborne&amp;rsquo;s route through Europe during World War II&lt;/a>. It was the trip that forever kicked off a desire to learn foreign languages (specifically German). I returned from the trip in the Summer of 2002, met with my guidance counselor, and had her completely rearrange my sophomore class schedule just so that I could learn German (I had also been taking Spanish up to that point). Over the next three years, I did everything I could possible do to learn German. As a sophomore in high school, I&amp;rsquo;d aced the county German exam (and found 3 grammatical mistakes), taken the national German exam (scored a 96), and was invited to participate in the &lt;a class="link" href="http://www.aatg.org/?page=SummerStudy" target="_blank" rel="noopener"
>American Association of German Teachers Summer Study Program&lt;/a>. Not to mention, I was the first person from TN in 12 years to be selected for that program.
&lt;img src="https://aaron.sachs.blog/images/aatg.jpg"
loading="lazy"
>&lt;/p>
&lt;p>Until this point, I had thought that I was going to spend the rest of my life and career in Germany, with a German wife, happily speaking German. All roads led to Rome&amp;hellip;er, Berlin, in this case.&lt;/p>
&lt;h3 id="college-or-the-real-world-sets-in">College (Or, The Real World Sets In)
&lt;/h3>&lt;p>I graduated in 2005 having kicked the proverbial pants off of my high school&amp;rsquo;s German program. Along with two friends, we&amp;rsquo;d forced the school to start providing German AP classes, had all scored high marks on the German AP exam, and were going to continue our German studies in college. In fact, I&amp;rsquo;d waived up to senior level courses, completed the required classes, done another exchange stent in Leipzig during the 2006 Weltmeisterschaft (World Cup), and was merrily on my way to being a career academic. All the while, I&amp;rsquo;d somehow acquired a bit of technical acumen (designed a website for a local non-profit, fixed computers for friends, etc.)&lt;/p>
&lt;p>Here&amp;rsquo;s where the path gets a bit wonky. While I&amp;rsquo;d completed the German degree requirements, I was at a &lt;a class="link" href="http://berea.edu" target="_blank" rel="noopener"
>four-year institution&lt;/a> that required me to complete the whole four-year stent in order to earn my degree. I was two years in, and had no idea what I was going to do. Me being the chatty dude that I am, I picked up another degree in Speech Communication. What better combination? I could ramble in German, and put a bit of communication theory behind it. &amp;ldquo;How to Be Persuasive in German&amp;rdquo; should have been my senior project&amp;hellip;&lt;/p>
&lt;p>Oh, did I mention I met an &lt;a class="link" href="http://ashleysachs.com" target="_blank" rel="noopener"
>amazing woman&lt;/a> along the way? We knew each other since high school, but started dating in college. Our relationship had blossomed to the point that the thought of pursuing further German studies was going to take me far away from her. We&amp;rsquo;d spent 2006-2009 dating long distance, and I wasn&amp;rsquo;t keen to be further away from her (we also began our relationship by starting to date each other two weeks before the three-month exchange trip I took to Leipzig).
&lt;img src="https://aaron.sachs.blog/images/ashSpain.jpg"
loading="lazy"
>
I decided then that I would pursue further studies in Communication, and enrolled in the MS of Communication and Information program at the University of Tennessee.&lt;/p>
&lt;h3 id="communication-is-cheapliterally">Communication is Cheap&amp;hellip;Literally
&lt;/h3>&lt;p>After Ashley and I graduated, we both ended up back in Tennessee. I had started my Master&amp;rsquo;s program, and she was studying to be a forensic pathologist. While searching for a job on campus that didn&amp;rsquo;t involve spending my days at the local Chick-fil-A breading chicken, I started applying for assistantships. My department&amp;rsquo;s assistantship paid ~$300/month (which was NOT going to cover rent), so I looked to other departments. After 13 rejections, I landed a job at the Office of Information Technology at the helpdesk.&lt;/p>
&lt;p>Over the next two years, I worked on just about everything related to desktop support and have the horror stories to prove it. Professor-dad screaming about how his non-student daughter&amp;rsquo;s desktop got infected by malware and we&amp;rsquo;re not helping him? Check. Crazy cat lady&amp;rsquo;s ancient, dust-bunny infested desktop that has barely enough resources to run notepad? Check. The student who has a completely disarticulated hard drive and wants us to &amp;lsquo;fix it?&amp;rsquo; Oh yeah, check.
&lt;img src="https://aaron.sachs.blog/images/selfaware.jpg"
loading="lazy"
>&lt;/p>
&lt;p>Graduation was looming, as was my marriage to Ashley. I decided that a $1000/month job wasn&amp;rsquo;t really going to cut it for a young family (and neither was surviving on the rest of my student loans), so I met with my then manager, beefed up a resume with her help, and eventually ended up with a contract job at Pilot/Flying J where I re-architected their desktop deployment process as contractor in their QA lab. It&amp;rsquo;s safe to say that the deployment process was&amp;hellip;archaic. In the first two months of my contract, I was able to reduce the number of &amp;lsquo;golden images&amp;rsquo; from ~30 to two, decrease the average deployment time from two weeks to four hours, and decrease the total space taken up by the images from ~100gb to &amp;lt; 16gb. At the end of the contract, I moved next door to a small MSP&amp;ndash;I wasn&amp;rsquo;t going to be able to get them to use WSUS (which would have brought its own challenges) and was still going to be a contractor with no benefits.&lt;/p>
&lt;h3 id="starting-support-leaving-the-southeast">Starting Support, Leaving the Southeast
&lt;/h3>&lt;p>The move to the MSP I worked at was my introduction to a proper ticket queue (often hundreds of tickets). I started beefing up my support chops there, where I supported everything from random line-of-business applications for doctors, to Outlook, Exchange, MSSQL, and everything in between. You read correctly&amp;ndash;I was a Winows admin at one time (shudders). But honestly, without that job (or really any of my technical positions), I wouldn&amp;rsquo;t be where I am. It was there that I also beefed up my technical chops. I took the little that I knew from my job at the University of Tennessee&amp;rsquo;s helpdesk, and the bit that I knew about Windows and applied that in this job.&lt;/p>
&lt;p>Eventually, I realized that if I wanted to grow technically, it wasn&amp;rsquo;t going to be as a Windows admin in the Southeast US. I&amp;rsquo;d come to find out that if you&amp;rsquo;re not in Atlanta, Georgia, and not in/around the research triangle in North Carolina, finding a technical job that pays well and wasn&amp;rsquo;t one of those &lt;a class="link" href="https://hbr.org/2013/01/dont-hire-the-perfect-candidat" target="_blank" rel="noopener"
>&amp;lsquo;purple squirrel&amp;rsquo;&lt;/a> type positions was nigh impossible. If I was going to get anywhere, I needed a mentor. Thankfully, one of my &lt;a class="link" href="https://mikejulian.com/" target="_blank" rel="noopener"
>best friends&lt;/a> took me under his wing. For around 6 months, we met every Tuesday night at a local coffee shop talking Linux, operations, and everything in between. He even gave me &lt;a class="link" href="https://gist.github.com/asachs01/5d9bf5469ec22c7dc142" target="_blank" rel="noopener"
>a project&lt;/a> that was designed to incrementally teach me more about the basics of being a Linux admin.&lt;/p>
&lt;p>At around the six-month mark of our coffee shop meetings, I started applying to companies outside of Tennessee. Usenix, AWS, NIST, and Rackspace were the companies on my list, and amazingly, I got interviews with each one. The mentorship had paid off, even if I was a bit green and hadn&amp;rsquo;t worked on any Linux production infrastructure up to this point. In the end, I ended up getting turned down from AWS, NIST moved too slow, Usenix didn&amp;rsquo;t have a competitive offer, and while I had been turned down from Rackspace initially, they offered a position (Linux Technician) that would allow me to learn, work on customer production infrastructure, and provide the space for me to grow and learn more about being a Linux admin.&lt;/p>
&lt;h3 id="texas-and-beyond">Texas and Beyond
&lt;/h3>&lt;p>&lt;img src="https://aaron.sachs.blog/images/loaded.jpg"
loading="lazy"
alt="Loaded Uhaul"
>
The move from Tennessee to Texas was the hardest thing I&amp;rsquo;ve done in my adult life. My wife and I moved 16 hours from all we&amp;rsquo;d ever known, to a town where we knew two people (my aunt and uncle, who have been our surrogate parents in the time we&amp;rsquo;ve been in San Antonio). The drive was hard, and the first 6 months of being in Texas almost broke us. We missed the mountains, the people, and our homes. Ultimately, we found a home at Rackspace. Some of our dearest friends were made there as we met for the first time at the Tamale Festival in sub 40F weather (unusual for San Antonio).&lt;/p>
&lt;p>The time I spent at Rackspace grew me immensely. I went from knowing only what I had learned in the project my mentor had provided me, to working on projects that affected a number of customers, writing automation to take some of the pain out of support as well as reduce the number of hours we spent supporting customers, and mentoring other greenhorn admins.&lt;/p>
&lt;p>While Rackspace was an amazing opportunity, I realized that the need I have to keep growing and learning wasn&amp;rsquo;t getting satisfied, and I was getting burnt out staying in the same place. I then started looking for a new role. I needed something that would allow a bit more creativity, as well as further growth. In March, I took a role with DigitalOcean, which you can read more about &lt;a class="link" href="2016-07-07-so-youre-in-customer-success-now-what" >here&lt;/a>. It&amp;rsquo;s been an amazing chance to grow technically, and touch more cutting edge technology than I would have at Rackspace.&lt;/p>
&lt;p>Looking back, I can say that each new role and phase of my career led to the other. The path to support (yes, Customer Success is support, at least at DigitalOcean) hasn&amp;rsquo;t been a straight one at all. It&amp;rsquo;s been a bit caddywhompus at times, and has entailed making decisions that I never thought I&amp;rsquo;d have to make (like moving). But I can see that the roles built upon each other, whether it be developing new technical skills, or improving the ways in which I communicate and relate to customers. I also see the direct and tangible results that being in a mentoring relationship has had on my career. I&amp;rsquo;ll leave with a couple of thoughts: 1.) Unless you know 100% for a fact that support is the career you want to have, starting a career in support is never a straight path. Those of us in the &lt;a class="link" href="https://supportdriven.com/" target="_blank" rel="noopener"
>Support Driven community&lt;/a> know this, and come from various and sundry backgrounds that have led to where we are. 2.) If you&amp;rsquo;re starting out in a support role, I can&amp;rsquo;t stress enough how important it is to be in a mentoring relationship. It&amp;rsquo;s the difference in say, using two sticks to start a fire, and pouring some jet fuel on that fire. It made all the difference for me, and is something I actively try to pass on as I mentor other admins.&lt;/p></description></item><item><title>How Homebrewing Saved Me from Burnout</title><link>https://aaron.sachs.blog/archive/how-homebrewing-saved-me-from-burnout/</link><pubDate>Tue, 26 Jul 2016 00:40:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/how-homebrewing-saved-me-from-burnout/</guid><description>&lt;p>It&amp;rsquo;s weird to say that beer saved me from depression. Let&amp;rsquo;s face it, it&amp;rsquo;s not exactly the most common thing for someone to claim as having a positive impact on one&amp;rsquo;s life. But beer saved me, in a weird sort of way.&lt;/p>
&lt;p>Last winter, I was miserable. My wife saw it, my coworkers saw it, and after many conversations that highlighted my incessant complaining about my former employer, I finally admitted that I was in fact, a bit of a mess. My symptoms included:&lt;/p>
&lt;ul>
&lt;li>Being a bit of an ass to my wife, whom I love fiercely&lt;/li>
&lt;li>Being a outright ass to some of my customers&lt;/li>
&lt;li>Complaining about the lack of necessary change occurring in my department&lt;/li>
&lt;li>And generally complaining about anything I could find a reason to complain about&lt;/li>
&lt;/ul>
&lt;p>In short, I was bitter, overly critical, and no one wanted to be around me&amp;hellip;including me. I&amp;rsquo;d woken up several times during the winter months and thought, &amp;ldquo;Not again. I can&amp;rsquo;t do another day of this. Why in the hell did I move 1,100 miles for this?&amp;rdquo;&lt;/p>
&lt;p>That&amp;rsquo;s when one of my dearest friends and mentors suggested that I take up a hobby. He and I&amp;rsquo;d been talking over Slack and he asked me, &amp;ldquo;Do you have any hobbies?&amp;rdquo; Dumbstruck, I couldn&amp;rsquo;t recall having anything to do during my free time other than study for certifications and try and bone up on all things *NIX-y. That night, I decided that I was going to take a week and learn how to homebrew. That was the best decision for my mental health that I&amp;rsquo;d made in a while.&lt;/p>
&lt;p>I&amp;rsquo;d mentioned to a coworker that I was going to take some time to homebrew. He generously gave me his kit, noting that he wasn&amp;rsquo;t using it. After a month, I had a passable &lt;a class="link" href="https://www.beeradvocate.com/beer/style/66/" target="_blank" rel="noopener"
>ESB&lt;/a>. Mind you, it was a bit watery, but it was by no means terrible.&lt;/p>
&lt;p>In that watered-down, bubbly bit of brew, I found a hobby. I found something that would keep me from being completely burnt out.&lt;/p>
&lt;p>I&amp;rsquo;m particularly interested in why brewing staved off the burnout. After all, it wasn&amp;rsquo;t that I chose brewing as a hobby with the express purpose of keeping my sanity. I had chosen homebrewing on a whim, namely because I like good beer and wanted to make my own &amp;ldquo;good&amp;rdquo; beer.&lt;/p>
&lt;p>It wasn&amp;rsquo;t until Christmas that my mentor hit on something in a &lt;a class="link" href="http://sysadvent.blogspot.com/2015/12/day-8-be-better-engineer-dont-do.html" target="_blank" rel="noopener"
>SysAdvent&lt;/a> post that he wrote. To quote him: &amp;ldquo;Brewing beer is a mixture of being methodical, something that is near and dear to all our hearts, and art.&amp;rdquo; I&amp;rsquo;d found a medium of expression that allowed me to still be methodical (something that was required in solving the types of problems a systems administrator solves), and be creative&amp;hellip;the element that was missing from day-to-day duties.&lt;/p>
&lt;p>As an &lt;a class="link" href="https://www.16personalities.com/intp-personality" target="_blank" rel="noopener"
>INTP&lt;/a>, I need space to create. Relentless break-fixing is something I&amp;rsquo;ve since discovered contributes to a regular cycle of burnout for me. If I&amp;rsquo;m stuck in that constant cycle, I&amp;rsquo;ll inevitably start becoming a bit of an ass again. Thankfully, I&amp;rsquo;ve got a few hobbies now, and one that I&amp;rsquo;ve found that I love doing.&lt;/p>
&lt;p>PS: If you&amp;rsquo;re struggling with burnout, head over to &lt;a class="link" href="http://burnout.io" target="_blank" rel="noopener"
>burnout.io&lt;/a>. The site has a great list of ways that you can mitigate burnout.&lt;/p></description></item><item><title>So You're In Customer Success, Now What?</title><link>https://aaron.sachs.blog/archive/so-youre-in-customer-success-now-what/</link><pubDate>Fri, 08 Jul 2016 00:39:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/so-youre-in-customer-success-now-what/</guid><description>&lt;h3 id="starting-out">Starting Out
&lt;/h3>&lt;p>Back in April, I started a new role as a customer success engineer with &lt;a class="link" href="http://digitalocean.com" target="_blank" rel="noopener"
>DigitalOcean&lt;/a>. Admittedly, I didn&amp;rsquo;t know what to expect coming from being a systems administrator. During the interview process, I got the impression that the role was a mixture of account management, solutions engineering, and support.&lt;/p>
&lt;p>Now three months into the role, I can confidently say that with regard to duties, my impression was more or less spot on. But in practice, the role is so much more than that. It&amp;rsquo;s more than taking care of discounts, payments, and other account level issues. It&amp;rsquo;s more than specing out a solution for a customer, or writing scripts to provision that solution automatically. It&amp;rsquo;s more than just making sure that an issue is fixed, or that you have the answer to every technical question.&lt;/p>
&lt;p>There&amp;rsquo;s a relational element to customer success that&amp;rsquo;s hard to quantify. The best way I can explain it is like this:&lt;/p>
&lt;p>Suppose your grandmother, significant other, or best friend suddenly starts up a company. They come to you and ask you, &amp;ldquo;Heya! I want to use &lt;!-- raw HTML omitted --> for my startup and need your help. Can you help me out?&amp;rdquo;&lt;/p>
&lt;p>What would you do? If you&amp;rsquo;re invested in that person, you&amp;rsquo;d likely do everything you can to help them out. In practicality, it might look like:&lt;/p>
&lt;ul>
&lt;li>Taking a hands-on approach to managing their account to ensure that they have a butter-smooth on-boarding process&lt;/li>
&lt;li>Take an extended time to understand what they&amp;rsquo;re doing with their business and what they&amp;rsquo;re looking to do on the platform&lt;/li>
&lt;li>Advising them about any pitfalls that they might encounter along the way&lt;/li>
&lt;li>Making sure that they now about everything on the platform that will help their business grow&lt;/li>
&lt;li>Showing genuine concern and empathy when things aren&amp;rsquo;t going so smoothly&lt;/li>
&lt;li>Being transparent about the platform&amp;rsquo;s shortcomings/weak areas and suggesting ways that they might be able to work around those weaknesses&lt;/li>
&lt;/ul>
&lt;p>In short, you&amp;rsquo;d do everything you feasibly can to make sure that their company grows and succeeds. So yes, being a customer success engineer (or customer success manager, in other industry-specific parlance) is different than being an admin.&lt;/p>
&lt;p>So how does one make the transition from being an admin to being a customer success engineer/manager?&lt;/p>
&lt;h3 id="moving-from-admin--customer-success">Moving from Admin &amp;ndash;&amp;gt; Customer Success
&lt;/h3>&lt;p>The last three months have been a challenge, I won&amp;rsquo;t lie. I&amp;rsquo;d developed some bad habits in my last role, and it comes down to two big ones:&lt;/p>
&lt;ul>
&lt;li>Lack of empathy (largely due to ticket crunching&amp;hellip;when your team addresses hundreds of tickets a day, it&amp;rsquo;s hard to have enough time to be empathetic in every one)&lt;/li>
&lt;li>The aforementioned being myopic when addressing issues/tickets&lt;/li>
&lt;/ul>
&lt;p>In short, I didn&amp;rsquo;t care. I didn&amp;rsquo;t have time to care. Don&amp;rsquo;t get me wrong, it&amp;rsquo;s not that I didn&amp;rsquo;t want to care. The last thing I think anyone wants in their job is to come off as apathetic and disinterested. However, high volumes of support tickets don&amp;rsquo;t lead to an environment that engenders empathy and a holistic focus on customer accounts.&lt;/p>
&lt;p>So how did I get past that? Well, for one, starting a new role helped. I didn&amp;rsquo;t feel as burned out, and being in a new environment was refreshing. Also, accountability is another HUGE help. When you&amp;rsquo;re part of a team that calls you out for not being empathetic, or showing genuine care for your customers, you learn quick that you need to change your behavior. The other thing that&amp;rsquo;s helped is being involved in the customer success community. For me, that&amp;rsquo;s looked like:&lt;/p>
&lt;ul>
&lt;li>Reading up on customer success literature (So far, the book that&amp;rsquo;s helped with the transition the most has been &lt;a class="link" href="https://www.amazon.com/Farm-Dont-Hunt-Definitive-Customer-ebook/dp/B01BIBY8W0" target="_blank" rel="noopener"
>Farm, Don&amp;rsquo;t Hunt&lt;/a>)&lt;/li>
&lt;li>Being present and (somewhat) active in the &lt;a class="link" href="https://supportdriven.com/" target="_blank" rel="noopener"
>Support Driven&lt;/a> Slack channel&lt;/li>
&lt;li>Reaching out to other customer success organizations, like &lt;a class="link" href="http://glideconsultingllc.com/" target="_blank" rel="noopener"
>Glide Consulting&lt;/a> to see how they do Customer Success&lt;/li>
&lt;/ul>
&lt;p>Also, it&amp;rsquo;s taken asking myself the hard questions about how I approach customer issues and taking a step back when I realize I&amp;rsquo;m defaulting to a break/fix mentality. That&amp;rsquo;s definitely not fun.&lt;/p>
&lt;p>Now, I&amp;rsquo;m prone to wanting to make everything repeatable and testable. I blame it on my training as an academic researcher. I love patterns and I love it when I can make something fit into a pattern that I just automate and set on autopilot. I&amp;rsquo;ve found that&amp;rsquo;s not how Customer Success works. Why? Relationships. Like I mentioned earlier, Customer Success is more than fixing a single problem. It&amp;rsquo;s about establishing trust and rapport with customers and being invested in their growth. There are patterns and methods that I&amp;rsquo;ve found in some of the interviews I&amp;rsquo;ve been doing, but they&amp;rsquo;re certainly well-suited to a &amp;ldquo;one-size-fits-all&amp;rdquo; approach. They take tweaking, adjusting, and above all, the ability to admit that those methods may just not work for a customer success organization. All that to say the journey into Customer Success requires hard work and for me, quite a bit of introspection to reflect on what I do on a daily basis to see if it fits within a Customer Success mold.&lt;/p>
&lt;p>So if you&amp;rsquo;re just starting out in Customer Success from a more technical role, and you&amp;rsquo;re finding it hard, don&amp;rsquo;t worry. It&amp;rsquo;s not an easy transition. But if you take some time to reflect on your default habits, get involved in the customer success community and be open to the fact that it&amp;rsquo;s going to take some time to make the transition into the new role, you&amp;rsquo;ll be off to a good start.&lt;/p></description></item><item><title>A Little Bit of Banjo</title><link>https://aaron.sachs.blog/archive/a-little-bit-of-banjo/</link><pubDate>Thu, 12 May 2016 00:38:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/a-little-bit-of-banjo/</guid><description>&lt;p>I promised the occasional banjo tune. I&amp;rsquo;m delivering. Whaaaaaat! For your viewing pleasure:&lt;/p>
&lt;!-- raw HTML omitted -->
&lt;p>Enjoy!&lt;/p></description></item><item><title>Blog Refresh/Coming Back from Burnout</title><link>https://aaron.sachs.blog/archive/untitled/</link><pubDate>Mon, 21 Mar 2016 00:37:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/untitled/</guid><description>&lt;p>It&amp;rsquo;s been a while since my last post. In between the old day job, travel, and looking for a new day job, I&amp;rsquo;ve been helping out with a project called &lt;a class="link" href="http://burnout.io" target="_blank" rel="noopener"
>Burnout.io&lt;/a>, which is focused on providing resources to help mitigate IT-related workplace burnout. I became involved with the project after my friend &lt;a class="link" href="https://mikejulian.com/" target="_blank" rel="noopener"
>Mike Julian&lt;/a> pointed me to the site.&lt;/p>
&lt;p>A little over a year ago, I found myself in a bit of a bad place and to be honest, was there for the last couple of months. My time at my previous two jobs had been spent ticket crunching and burning through the never-ending firehose of requests that come with being a support tech. The last several years at Rackspace have been a delicate balance between being able to learn and grow, and do the day-to-day work of customer requests. It left me tired, bored, and disengaged, both at work and home.&lt;/p>
&lt;p>I took the time during Christmas vacation to reconnect a bit with the project that helped center me this time a year ago. I started digging through the issues on &lt;a class="link" href="https://github.com/reignite/burnout.io" target="_blank" rel="noopener"
>Burnout.io&amp;rsquo;s GitHub repo&lt;/a> to see what was needed to be done&amp;ndash;we&amp;rsquo;d had a backlog of things that just hadn&amp;rsquo;t been done. Everything from moving away from the Pico php framework the site was using, to adding more resources for people to use.&lt;/p>
&lt;p>As I started working through the issues, making my changes, and engaging with the site maintainer, I started reading back through the resources page. I was reminded that if things aren&amp;rsquo;t going to change, it&amp;rsquo;s a good idea to move on, or take a break. Unfortunately, the work of a support tech just wasn&amp;rsquo;t piquing my interest, and multiple breaks didn&amp;rsquo;t seem to solve for my being disengaged.&lt;/p>
&lt;p>I started searching for a new role, both internally and externally. I wanted something that would offer more time to tinker, to create, and demand less of the &amp;ldquo;crunch through these hundreds of tickets.&amp;rdquo; That search has led me to the Customer Success Engineer role at Digital Ocean. I&amp;rsquo;m excited about what the role entails, and can&amp;rsquo;t wait to start digging in. The eagerness and newness of the role has brings with it the freedom that moving on typically brings, and the funk of the last couple of months has lifted.&lt;/p>
&lt;p>That said, I can&amp;rsquo;t wait to share what I&amp;rsquo;ve been working on the last few months as I&amp;rsquo;ve tried to mitigate my burnout the last couple of months. You can look forward to me sharing some of my extracurricular non-technical endeavors. Namely, some pipe-making and shave-brush making, as well as continuing to brew beer. After all, it was homebrewing that brought me out of burnout the last time, so I&amp;rsquo;m a bit loathe to give it up.&lt;/p>
&lt;p>I&amp;rsquo;ll try and share some of those in the coming weeks. Until then, cheers!&lt;/p>
&lt;p>Aaron&lt;/p></description></item><item><title/><link>https://aaron.sachs.blog/archive/graylog-move-to-multinode/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/graylog-move-to-multinode/</guid><description/></item><item><title/><link>https://aaron.sachs.blog/archive/graylog-setup/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/graylog-setup/</guid><description/></item><item><title/><link>https://aaron.sachs.blog/archive/monitoring-graylog/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>https://aaron.sachs.blog/archive/monitoring-graylog/</guid><description/></item></channel></rss>