<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Raspberry Pi on Staring Blankly at a Screen</title><link>https://aaron.sachs.blog/tags/raspberry-pi/</link><description>Recent content in Raspberry Pi on Staring Blankly at a Screen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2025 Aaron Sachs. All rights reserved.</copyright><lastBuildDate>Thu, 09 May 2019 19:49:32 -0500</lastBuildDate><atom:link href="https://aaron.sachs.blog/tags/raspberry-pi/index.xml" rel="self" type="application/rss+xml"/><item><title>Compiling and Running Sensu Go on ARM</title><link>https://aaron.sachs.blog/archive/sensu-go-on-arm/</link><pubDate>Thu, 09 May 2019 19:49:32 -0500</pubDate><guid>https://aaron.sachs.blog/archive/sensu-go-on-arm/</guid><description>&lt;h1 id="updates">UPDATES
&lt;/h1>&lt;p>When I originally wrote this post, I was operating under some outdated assumptions when it comes to building Sensu on arm devices. I&amp;rsquo;ll post the updates here at the beginning of the article, and you can read on to see how I&amp;rsquo;d previously set up Sensu on my Nvidia Jetson Nanos.&lt;/p>
&lt;h2 id="compiling-sensu-go">Compiling Sensu Go
&lt;/h2>&lt;p>As a Go novice, I didn&amp;rsquo;t fully understand the workflow for compiling Sensu for arm devices. As it so happens, it&amp;rsquo;s fairly easy to cross-compile from whatever device you&amp;rsquo;re on and then just transfer the binaries to the system you want to run on. I found this out the hard way by trying to compile on the Raspberry Pi&amp;rsquo;s I have. This resulted in them locking up.&lt;/p>
&lt;p>So let&amp;rsquo;s walk through the non-build-script way of doing this:&lt;/p>
&lt;ol>
&lt;li>Install Go&lt;/li>
&lt;li>&lt;a class="link" href="#obtaining-sensu-go" >Obtain Sensu Go&lt;/a>&lt;/li>
&lt;li>Build the binary for your arm system of choice using &lt;code>GOOS=linux GOARCH=arm go install ./...&lt;/code> from inside the project root (&lt;code>$GOPATH/src/github/sensu/sensu-go&lt;/code>)&lt;/li>
&lt;li>Transfer to the binary/binaries to your Pi&amp;rsquo;s, Nano&amp;rsquo;s, or other arm board&lt;/li>
&lt;li>Proceed through the &lt;a class="link" href="#running-sensu-go" >rest of the setup&lt;/a>&lt;/li>
&lt;/ol>
&lt;p>Now, you can absolutely run through the original post as it was and &lt;em>still&lt;/em> run Sensu. However, I find that cross compiling from a system with a bit more oomph is going to make things easier.&lt;/p>
&lt;h1 id="original-post">Original post
&lt;/h1>&lt;p>In this post, I&amp;rsquo;ll cover how I am running Sensu Go on several NVIDIA Jetson Nanos. Though this is being done on a Nano, you could use the same approach I use here on a Raspberry Pi, or any other armv7 board. I would note that this is a temporary until official Sensu Go arm packages are released.&lt;/p>
&lt;h1 id="the-setup">The Setup
&lt;/h1>&lt;p>There are several things you&amp;rsquo;ll need to do before you can start playing around with Sensu Go.&lt;/p>
&lt;ol>
&lt;li>Install Go on your system&lt;/li>
&lt;li>Grab Sensu Go&lt;/li>
&lt;li>Build the binaries&lt;/li>
&lt;/ol>
&lt;h2 id="installing-go">Installing Go
&lt;/h2>&lt;p>While installing Go on the Jetson as fairly trivial, the goal here is to give you a complete accounting of how I did what I did.&lt;/p>
&lt;p>To install Go, run:&lt;/p>
&lt;p>&lt;code>sudo apt-get install golang&lt;/code>&lt;/p>
&lt;p>You should then have it installed on your system. If you need more complete documentation on installing Go, please see &lt;a class="link" href="https://golang.org/dl/" target="_blank" rel="noopener"
>Go&amp;rsquo;s docs on downloading and installing Go onto your system&lt;/a>.&lt;/p>
&lt;h2 id="obtaining-sensu-go">Obtaining Sensu Go
&lt;/h2>&lt;p>Once you&amp;rsquo;ve installed Go, the next step is to obtain Sensu Go. To get the package, run the following:&lt;/p>
&lt;p>&lt;code>go get github.com/sensu/sensu-go/...&lt;/code>&lt;/p>
&lt;p>This will put the package at &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>.&lt;/p>
&lt;h2 id="building-the-binaries">Building the Binaries
&lt;/h2>&lt;p>Next up, we&amp;rsquo;re going to build the binaries using a script provided in the repo. You&amp;rsquo;ll want to ensure that you&amp;rsquo;re in &lt;code>$GOPATH/src/github.com/sensu/sensu-go&lt;/code>. Once you&amp;rsquo;re there, you&amp;rsquo;ll find a script called &lt;code>build.sh&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">❯❯❯❯ ls
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">agent dashboard rpc vendor Dockerfile.rhel_atomic build.ps1
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">api docker-scripts scripts version Dockerfile.testagent build.sh
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">asset examples system CHANGELOG.md FAQ.md docker-compose.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">backend graphql testing CONTRIBUTING.md Gopkg.lock
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cli handler transport DCO Gopkg.toml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">cmd js types Dockerfile LICENSE
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">command licenses util Dockerfile.rhel README.md
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>We&amp;rsquo;ll run that and build our binaries:&lt;/p>
&lt;p>&lt;code>./build.sh&lt;/code>&lt;/p>
&lt;p>Now, we&amp;rsquo;ll grab that binaries that were built:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">cd $GOPATH/bin
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp sensu-{agent,backend} /usr/sbin/
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>That&amp;rsquo;s it for the prep work. Now it&amp;rsquo;s on to actually running Sensu Go.&lt;/p>
&lt;h1 id="running-sensu-go">Running Sensu Go
&lt;/h1>&lt;p>To run Sensu Go, we&amp;rsquo;ll need to go through the following steps:&lt;/p>
&lt;ol>
&lt;li>Create the service files for the respective services&lt;/li>
&lt;li>Create the Sensu user/group&lt;/li>
&lt;li>Create the respective directories needed for Sensu to operate&lt;/li>
&lt;li>Grab config files for Sensu Go&lt;/li>
&lt;/ol>
&lt;h2 id="creating-the-service-files">Creating the Service Files
&lt;/h2>&lt;p>There are two service files that will need to be created in order to use systemd to manage Sensu Go as you&amp;rsquo;d find with RHEL/Debian packages:&lt;/p>
&lt;p>&lt;strong>Sensu Backend Service File&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Unit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">The&lt;/span> &lt;span class="n">Sensu&lt;/span> &lt;span class="n">Backend&lt;/span> &lt;span class="n">service&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Service&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load env vars from /etc/default/ and /etc/sysconfig/ if they exist.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Prefixing the path with &amp;#39;-&amp;#39; makes it try to load, but if the file doesn&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exist, it continues onward.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sysconfig&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LimitNOFILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecStart&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sbin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span> &lt;span class="n">start&lt;/span> &lt;span class="o">-&lt;/span>&lt;span class="n">c&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">backend&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">yml&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WorkingDirectory&lt;/span>&lt;span class="o">=/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Install&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">multi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To make this a bit easier, you can do the following:&lt;/p>
&lt;p>&lt;code>sudo curl -L https://gist.githubusercontent.com/asachs01/497ede01e9905e7917d577451ac51c1b/raw/141aa960a5481e4c536ff790561c5effd0f3b058/sensu-backend.service -o /lib/systemd/system/sensu-backend.service&lt;/code>&lt;/p>
&lt;p>&lt;strong>Sensu Agent Service File&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Unit&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Description&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">The&lt;/span> &lt;span class="n">Sensu&lt;/span> &lt;span class="n">Agent&lt;/span> &lt;span class="n">process&lt;/span>&lt;span class="o">.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">After&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Wants&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">network&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">online&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Service&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Type&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">simple&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">User&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Group&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Load env vars from /etc/default/ and /etc/sysconfig/ if they exist.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># Prefixing the path with &amp;#39;-&amp;#39; makes it try to load, but if the file doesn&amp;#39;t&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1"># exist, it continues onward.&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">default&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">EnvironmentFile&lt;/span>&lt;span class="o">=-/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sysconfig&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">LimitNOFILE&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="mi">65535&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">ExecStart&lt;/span>&lt;span class="o">=/&lt;/span>&lt;span class="n">usr&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sbin&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span> &lt;span class="n">start&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">Restart&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">always&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WorkingDirectory&lt;/span>&lt;span class="o">=/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">[&lt;/span>&lt;span class="n">Install&lt;/span>&lt;span class="p">]&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">WantedBy&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="n">multi&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">user&lt;/span>&lt;span class="o">.&lt;/span>&lt;span class="n">target&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And the same with this one:&lt;/p>
&lt;p>&lt;code>sudo curl -L https://gist.githubusercontent.com/asachs01/497ede01e9905e7917d577451ac51c1b/raw/141aa960a5481e4c536ff790561c5effd0f3b058/sensu-agent.service -o /lib/systemd/system/sensu-agent.service&lt;/code>&lt;/p>
&lt;p>Again, these will need to live at &lt;code>/lib/systemd/system/sensu-backend.service&lt;/code> and &lt;code>/lib/systemd/system/sensu-agent.service&lt;/code> respectively. Once you&amp;rsquo;ve got those in place, let&amp;rsquo;s move onto the next step.&lt;/p>
&lt;h2 id="create-the-sensu-usergroup">Create the Sensu User/Group
&lt;/h2>&lt;p>This is fairly simple, as we&amp;rsquo;ll only need to create a service account for Sensu:&lt;/p>
&lt;p>&lt;code>sudo useradd -r sensu&lt;/code>&lt;/p>
&lt;p>Now, onto the next step of creating the requisite directories for Sensu.&lt;/p>
&lt;h2 id="create-sensu-directories">Create Sensu Directories
&lt;/h2>&lt;p>There are three directories that need to be created and owned by the Sensu user:&lt;/p>
&lt;ul>
&lt;li>&lt;code>/var/lib/sensu&lt;/code>&lt;/li>
&lt;li>&lt;code>/var/cache/sensu&lt;/code>&lt;/li>
&lt;li>&lt;code>/etc/sensu&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Create each of these and change the ownership on them:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">mkdir&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">lib&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="k">var&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">cache&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">sudo&lt;/span> &lt;span class="n">chown&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">.&lt;/span> &lt;span class="o">/&lt;/span>&lt;span class="n">etc&lt;/span>&lt;span class="o">/&lt;/span>&lt;span class="n">sensu&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Alright, now for the last step: obtaining the config files.&lt;/p>
&lt;h2 id="obtaining-sensu-go-config-files">Obtaining Sensu Go Config Files
&lt;/h2>&lt;p>This is also a fairly quick step:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">curl -LO http://docs.sensu.io/sensu-go/latest/files/\{agent,backend\}.yml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo cp {agent,backend}.yml /etc/sensu
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Now, let&amp;rsquo;s get cooking.&lt;/p>
&lt;h2 id="start-sensu-go">Start Sensu Go
&lt;/h2>&lt;p>This is it. The moment you&amp;rsquo;ve been waiting for. It&amp;rsquo;s time to run Sensu!&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">sudo systemctl enable sensu-{agent,backend}
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">sudo systemctl start sensu-{agent,backend}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>To ensure that Sensu is running as we expect, do a quick &lt;code>sudo journalctl -fu sensu-backend&lt;/code>. Journald should be free of any errors and if you go to http://IPOFYOURSYSTEM:3000, you should get a nice dashboard that looks like:&lt;/p>
&lt;p>&lt;img src="https://p299.p4.n0.cdn.getcloudapp.com/items/OAuL7wme/Image&amp;#43;2020-01-17&amp;#43;at&amp;#43;12.25.47&amp;#43;PM.png?v=c53eadf0f22ed4865e2e5971c164b759"
loading="lazy"
alt="sensu go dashboard"
>&lt;/p>
&lt;p>There you have it! If you want to cluster a few Jetson Nanos, or Raspberry Pis up, head over to &lt;a class="link" href="https://docs.sensu.io/sensu-go/5.7/guides/clustering/" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s clustering guide&lt;/a>.&lt;/p>
&lt;p>Cheers!&lt;/p></description></item><item><title>Monitoring Raspberry Pi's with Sensu</title><link>https://aaron.sachs.blog/archive/monitoring-raspberry-pis-with-sensu/</link><pubDate>Thu, 16 Nov 2017 20:16:08 +0000</pubDate><guid>https://aaron.sachs.blog/archive/monitoring-raspberry-pis-with-sensu/</guid><description>&lt;p>Back in August, I took a Customer Success role at &lt;a class="link" href="https://sensuapp.org" target="_blank" rel="noopener"
>Sensu&lt;/a>. I&amp;rsquo;d been familiar with Sensu through my various bits of tinkering and dabbling with monitoring in the past, and was happy to take the role and work with the Sensu team officially.&lt;/p>
&lt;p>Now that I&amp;rsquo;ve been working with Sensu for a few months (and am officially on paternity leave for the next several weeks), I decided it was time to revisit the idea of using Sensu to monitor my Kegpi&amp;rsquo;s various sensors. I&amp;rsquo;d hit some blocks previously, but came back to it with some fresh eyes. Lo and behold, I&amp;rsquo;ve got it working! Let&amp;rsquo;s walk through how I&amp;rsquo;ve got it running.&lt;/p>
&lt;h3 id="the-setup">The Setup
&lt;/h3>&lt;p>Here are the prerequisites for getting Sensu to work on your Raspberry Pi:&lt;/p>
&lt;ul>
&lt;li>Ruby &amp;gt; 2.0&lt;/li>
&lt;li>Rubygems
&lt;code>sudo apt-get install ruby ruby-dev&lt;/code> (this should install rubygems by default)&lt;/li>
&lt;li>Sensu gem
&lt;code>sudo gem install sensu&lt;/code>&lt;/li>
&lt;li>A working Sensu server (you can snag one quick by downloading Vagrant, cloning my &lt;a class="link" href="https://github.com/asachs01/sensu-up-and-running" target="_blank" rel="noopener"
>&amp;ldquo;Sensu Up and Running&amp;rdquo; repo&lt;/a>, and doing a &lt;code>vagrant up&lt;/code>)&lt;/li>
&lt;/ul>
&lt;h3 id="configuration">Configuration
&lt;/h3>&lt;p>Before you get started, ensure you&amp;rsquo;ve added the &lt;code>sensu&lt;/code> user:&lt;/p>
&lt;ul>
&lt;li>&lt;code>useradd sensu&lt;/code>&lt;/li>
&lt;/ul>
&lt;h4 id="sensu">Sensu
&lt;/h4>&lt;p>By default, the Sensu gem installs three services: &lt;code>sensu-client&lt;/code>, &lt;code>sensu-server&lt;/code>, and &lt;code>sensu-api&lt;/code>. These form the core components of any Sensu installation, but we&amp;rsquo;re ultimately about getting a client up and running on the Raspi. Before we go too much futher into configuring Sensu, I recommend that if you&amp;rsquo;re not familiar with Sensu as a monitoring framework, you should take a moment and watch some of &lt;a class="link" href="https://www.youtube.com/playlist?list=PLqLtpBjHqwC-4o7HLtK3MM2V_GdtSh-Dw" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s free training videos&lt;/a>.&lt;/p>
&lt;p>Presuming you&amp;rsquo;ve already installed the gem, the commands to manage the Sensu client are located in &lt;code>/usr/local/bin&lt;/code>. The configuration files, however, are located in &lt;code>/etc/sensu/conf.d&lt;/code>. You&amp;rsquo;ll likely have to create that directory:&lt;/p>
&lt;p>&lt;code>sudo mkdir -p /etc/sensu/conf.d&lt;/code>&lt;/p>
&lt;p>From there, we&amp;rsquo;ll add three different configuration files, as per the &lt;a class="link" href="https://sensuapp.org/docs" target="_blank" rel="noopener"
>Sensu Documentation&lt;/a>:&lt;/p>
&lt;ul>
&lt;li>&lt;code>client.json&lt;/code>&lt;/li>
&lt;li>&lt;code>rabbitmq.json&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>Here&amp;rsquo;s what they&amp;rsquo;ll look like:&lt;/p>
&lt;p>client.json:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt">1
&lt;/span>&lt;span class="lnt">2
&lt;/span>&lt;span class="lnt">3
&lt;/span>&lt;span class="lnt">4
&lt;/span>&lt;span class="lnt">5
&lt;/span>&lt;span class="lnt">6
&lt;/span>&lt;span class="lnt">7
&lt;/span>&lt;span class="lnt">8
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;client&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;environment&amp;#34;: &amp;#34;development&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;subscriptions&amp;#34;: [
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;dev&amp;#34;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>rabbitmq.json&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">{
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;rabbitmq&amp;#34;: {
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;host&amp;#34;: &amp;#34;127.0.0.1&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;port&amp;#34;: 5672,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;vhost&amp;#34;: &amp;#34;/sensu&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;user&amp;#34;: &amp;#34;sensu&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;password&amp;#34;: &amp;#34;secret&amp;#34;,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;heartbeat&amp;#34;: 30,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;#34;prefetch&amp;#34;: 50
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> }
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">}
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Finish off by ensuring the permissions for all the files in &lt;code>/etc/sensu/&lt;/code> are owned by sensu:&lt;/p>
&lt;ul>
&lt;li>&lt;code>chown sensu. /etc/sensu/&lt;/code>&lt;/li>
&lt;/ul>
&lt;p>&lt;strong>NOTE&lt;/strong>: The credentials listed above should be changed. They&amp;rsquo;re merely examples pulled straight from the Sensu documentation and should NOT be used as is on any system you care about. You&amp;rsquo;ll also need to chage the IP addresses for Rabbit to the IP of the system(s) you have those running on. If you&amp;rsquo;re using the Sensu Up and Running Vagrant box, the IP addresses will be the same.&lt;/p>
&lt;h4 id="systemd">Systemd
&lt;/h4>&lt;p>If you&amp;rsquo;re used to a system using systemd for service management, you&amp;rsquo;ll be familiar with the service files located in &lt;code>/etc/systemd/system&lt;/code>. Sensu includes service files for each of the components, but for them to work on a Raspberry Pi, they need to be slightly modified. You&amp;rsquo;ll need to create the service file like so:&lt;/p>
&lt;p>&lt;code>sudo vim /etc/systemd/system/sensu-client.service&lt;/code>&lt;/p>
&lt;p>With the following content:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">[Unit]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Description=sensu client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Service]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">User=sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Group=sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">ExecStart=/usr/local/bin/sensu-client
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">KillMode=process
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">Restart=on-failure
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">RestartSec=1min
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">[Install]
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">WantedBy=multi-user.target
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>From there, start the service:
&lt;code>sudo systemctl start sensu-client&lt;/code>&lt;/p>
&lt;p>And set it to start at boot:
&lt;code>sudo systemctl enable sensu-client&lt;/code>&lt;/p>
&lt;p>Which, if you&amp;rsquo;re using the Sensu Up and Running repo I mentioned earlier, should get you something that looks like this:&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/kegpi-sensu.png"
loading="lazy"
alt="kegpi-sensu"
>&lt;/p>
&lt;h3 id="next-steps">Next Steps
&lt;/h3>&lt;p>So what do you do after getting Sensu working on your Raspi? Well, it&amp;rsquo;s up to you! In my case, I&amp;rsquo;ll use it to monitor the temperature, whether or not the door is open, and remaining liquid in the kegs for my kegerator.&lt;/p>
&lt;p>In your case, you may want to monitor some system-level activity, like load, available RAM, or something of the like. You could also use it to say, monitor a web app you&amp;rsquo;re running on the Raspi, or, since Sensu&amp;rsquo;s plugins can be written in any programming language, use it to monitor any number of sensors you can attach to the Pi. Again, if you haven&amp;rsquo;t already, take a look over &lt;a class="link" href="https://www.youtube.com/playlist?list=PLqLtpBjHqwC-4o7HLtK3MM2V_GdtSh-Dw" target="_blank" rel="noopener"
>Sensu&amp;rsquo;s training videos&lt;/a> to get a better idea of how Sensu works and what you can do with it.&lt;/p></description></item></channel></rss>