<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tech on Staring Blankly at a Screen</title><link>https://aaron.sachs.blog/categories/tech/</link><description>Recent content in Tech on Staring Blankly at a Screen</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© 2025 Aaron Sachs. All rights reserved.</copyright><lastBuildDate>Mon, 06 May 2019 11:32:56 -0500</lastBuildDate><atom:link href="https://aaron.sachs.blog/categories/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>A minimal Sensu environment with Docker</title><link>https://aaron.sachs.blog/archive/minimal-sensu-docker/</link><pubDate>Mon, 06 May 2019 11:32:56 -0500</pubDate><guid>https://aaron.sachs.blog/archive/minimal-sensu-docker/</guid><description>&lt;p>This past week, I had the pleaseure of attending Dockercon. While I was there primarily working the &lt;a class="link" href="https://sensu.io" target="_blank" rel="noopener"
>Sensu&lt;/a> booth, it occurred to me that Docker presents an ideal way to demo what Sensu does, and I can quickly get an environment up without having to go through the rigmarole that I previously did using &lt;a class="link" href="https://vagrantup.com" target="_blank" rel="noopener"
>Vagrant&lt;/a>. Now, that&amp;rsquo;s not saying that I think one tool is better than the other, but for the purposes of quick demos, Docker is more useful to me.&lt;/p>
&lt;p>So let&amp;rsquo;s go over the setup.&lt;/p>
&lt;h2 id="docker-details">Docker details
&lt;/h2>&lt;p>I&amp;rsquo;m primarily using &lt;a class="link" href="https://docs.docker.com/docker-for-mac/install/" target="_blank" rel="noopener"
>Docker for Mac&lt;/a> right now, since I&amp;rsquo;ve switched over from my Linux laptop. But now that I&amp;rsquo;ve covered that, let&amp;rsquo;s take a look at this &lt;a class="link" href="https://github.com/asachs01/sensu-go-minimal" target="_blank" rel="noopener"
>little repo&lt;/a> I&amp;rsquo;m using.&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-fallback" data-lang="fallback">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── README.md
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── assets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── hello-world-ruby.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── helloworld-v0.1.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── sensu-plugins-cpu-checks_4.0.0_alpine_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── sensu-ruby-runtime_0.0.5_alpine_linux_amd64.tar.gz
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── config
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── nginx
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── nginx.conf
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── sensu
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── assets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   ├── sensu-plugins-cpu-checks.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   │   └── sensu-ruby-runtime.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── checks
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   ├── check-cpu.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── check-disk-usage.yaml
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── docker-compose.yaml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>And a look at the docker-compose file:&lt;/p>
&lt;div class="highlight">&lt;div class="chroma">
&lt;table class="lntable">&lt;tr>&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code>&lt;span class="lnt"> 1
&lt;/span>&lt;span class="lnt"> 2
&lt;/span>&lt;span class="lnt"> 3
&lt;/span>&lt;span class="lnt"> 4
&lt;/span>&lt;span class="lnt"> 5
&lt;/span>&lt;span class="lnt"> 6
&lt;/span>&lt;span class="lnt"> 7
&lt;/span>&lt;span class="lnt"> 8
&lt;/span>&lt;span class="lnt"> 9
&lt;/span>&lt;span class="lnt">10
&lt;/span>&lt;span class="lnt">11
&lt;/span>&lt;span class="lnt">12
&lt;/span>&lt;span class="lnt">13
&lt;/span>&lt;span class="lnt">14
&lt;/span>&lt;span class="lnt">15
&lt;/span>&lt;span class="lnt">16
&lt;/span>&lt;span class="lnt">17
&lt;/span>&lt;span class="lnt">18
&lt;/span>&lt;span class="lnt">19
&lt;/span>&lt;span class="lnt">20
&lt;/span>&lt;span class="lnt">21
&lt;/span>&lt;span class="lnt">22
&lt;/span>&lt;span class="lnt">23
&lt;/span>&lt;span class="lnt">24
&lt;/span>&lt;span class="lnt">25
&lt;/span>&lt;span class="lnt">26
&lt;/span>&lt;span class="lnt">27
&lt;/span>&lt;span class="lnt">28
&lt;/span>&lt;span class="lnt">29
&lt;/span>&lt;span class="lnt">30
&lt;/span>&lt;span class="lnt">31
&lt;/span>&lt;span class="lnt">32
&lt;/span>&lt;span class="lnt">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td class="lntd">
&lt;pre tabindex="0" class="chroma">&lt;code class="language-gdscript3" data-lang="gdscript3">&lt;span class="line">&lt;span class="cl">&lt;span class="n">version&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s1">&amp;#39;3&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="n">services&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu/sensu:latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ports&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;3000:3000&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;2379:2379&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;2380:2380&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;8080:8080&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;8081:8081&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">command&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend start&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">volumes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;/tmp/sensu:/var/lib/sensu&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu/sensu:latest&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">command&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="s2">&amp;#34;sensu-agent start --backend-url ws://sensu-backend:8081 --subscriptions dev poller system linux docker --cache-dir /var/lib/sensu --namespace default --deregister true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">links&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend:backend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">depends_on&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">hostname&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">agent&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">asset&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">server&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">image&lt;/span>&lt;span class="p">:&lt;/span> &lt;span class="n">nginx&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="n">latest&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">ports&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="mi">8000&lt;/span>&lt;span class="p">:&lt;/span>&lt;span class="mi">80&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">volumes&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;./config/nginx/nginx.conf:/etc/nginx/nginx.conf&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;./assets:/usr/share/nginx/html/assets&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">depends_on&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="n">sensu&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="n">backend&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="n">links&lt;/span>&lt;span class="p">:&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">-&lt;/span> &lt;span class="s2">&amp;#34;sensu-backend:backend&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>What we end up with here is a backend, an agent, and a local asset server (SUPER useful if you&amp;rsquo;re on 💩 wifi/internet). This means that I can quickly spin up an agent and a backend, and then drop any &lt;a class="link" href="https://docs.sensu.io/sensu-go/latest/reference/assets/" target="_blank" rel="noopener"
>asset&lt;/a> that I need to use in the assets directory and have the agent download it quickly.&lt;/p>
&lt;p>This makes demos super quick to spin up, and I can scale a bunch of agents if I want to show a large number of agent containers connecting to the backend.&lt;/p>
&lt;p>Cheers!&lt;/p></description></item><item><title>Why I started using a Kanban tool for home tasks</title><link>https://aaron.sachs.blog/archive/my-personal-kanban/</link><pubDate>Sun, 10 Feb 2019 20:25:03 -0500</pubDate><guid>https://aaron.sachs.blog/archive/my-personal-kanban/</guid><description>&lt;p>I&amp;rsquo;ve tried quite a few to-do apps. Google Tasks, Todoist, Wunderlist, Any.do, &lt;!-- raw HTML omitted -->. I&amp;rsquo;ve even tried using things like a planner, or a Bullet Journal. No app, no physical piece of paper seems to do the trick when it comes to keeping track of things I need to do.&lt;/p>
&lt;p>That is, until I started using a tool that could emulate a Kanban-style workflow. Let&amp;rsquo;s start with &amp;ldquo;What the heck is a Kanban board?&amp;rdquo;&lt;/p>
&lt;h2 id="what-is-kanban">What is Kanban
&lt;/h2>&lt;p>Kanban boards are basically to-do lists on steroids. They find their origins in the world of &lt;a class="link" href="https://www.leanproduction.com/" target="_blank" rel="noopener"
>Lean Manufacturing&lt;/a>. A general flow looks something like this:&lt;/p>
&lt;p>To-do &amp;ndash;&amp;gt; Doing &amp;ndash;&amp;gt; Done&lt;/p>
&lt;p>Where you&amp;rsquo;d have 3 columns with items under the column that represents that item&amp;rsquo;s current status. Keep in mind a Kanban board can be customized to whatever you require, so these columns aren&amp;rsquo;t static. &lt;a class="link" href="https://www.atlassian.com/agile/kanban/boards" target="_blank" rel="noopener"
>There is a ton more that goes into a Kanban board&lt;/a>, but for a personal one, I&amp;rsquo;ve found that keeping it simple helps me best.&lt;/p>
&lt;h2 id="why-would-i-want-to-use-it">Why would I want to use it?
&lt;/h2>&lt;p>So why use a Kanban board over a traditional to-do list, or app? For me, it&amp;rsquo;s easy: I can see the progress of what I&amp;rsquo;m doing. At a glance, I can get some insight into what things are in my personal backlog and in what phase they&amp;rsquo;re in. It also happens that putting something on the board makes it stick for me.&lt;/p>
&lt;p>Using boards has stuck so well that I&amp;rsquo;ve started creating domain specific boards. I have one for home improvement projects, one for general errands and such, one for shopping lists, and a personal one for tasks that aren&amp;rsquo;t a home improvement project or an errand/household task.&lt;/p>
&lt;p>&lt;img src="https://aaron.sachs.blog/img/haus-projects.png"
loading="lazy"
alt="house projects"
>&lt;/p>
&lt;h2 id="what-tools-can-i-use-for-my-own-personal-kanban">What tools can I use for my own personal Kanban?
&lt;/h2>&lt;p>There are quite a number of tools you can use to do a personal Kanban board. Let&amp;rsquo;s look at a few:&lt;/p>
&lt;ul>
&lt;li>&lt;a class="link" href="https://trello.com/" target="_blank" rel="noopener"
>Trello&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://asana.com" target="_blank" rel="noopener"
>Asana&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://notion.so" target="_blank" rel="noopener"
>Notion&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://waffle.io" target="_blank" rel="noopener"
>Waffle&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://waffle.io" target="_blank" rel="noopener"
>Personal Kanban&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="http://personalkanban.com/pk/" target="_blank" rel="noopener"
>Kanban Tool&lt;/a>&lt;/li>
&lt;li>&lt;a class="link" href="https://www.pipefy.com/" target="_blank" rel="noopener"
>Pipefy&lt;/a>&lt;/li>
&lt;/ul>
&lt;p>I personally like using Notion for my boards. As a one-stop-shop type of software, it allows me to link to lists and documents that I&amp;rsquo;ve created inside of the app so I don&amp;rsquo;t have to ever worry about going back and forth between tabs or apps.&lt;/p>
&lt;p>I&amp;rsquo;ve also used Trello and Asana in the past, both at home and work. While they both work well as personal Kanban tools, I still tend to prefer Notion.&lt;/p>
&lt;p>If you&amp;rsquo;re more of the type that wants to use a Github-centric approach, Waffle is the tool for you.&lt;/p>
&lt;p>I&amp;rsquo;ve not yet used Personal Kanban, Kanban Tool, or Pipefy, so I can&amp;rsquo;t speak to those tools. However, what I&amp;rsquo;d recommend is giving each of these a shot to see if they&amp;rsquo;re right for you, or if they stick. If they do, awesome! If they don&amp;rsquo;t stick immediately, no worries. The more you use the tools, the more things will settle in and make sense as you develop your workflow.&lt;/p></description></item></channel></rss>